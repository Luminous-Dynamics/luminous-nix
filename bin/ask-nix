#!/usr/bin/env python3
"""Entry point for ask-nix command."""

import sys
import os
from pathlib import Path

# ðŸš€ ENABLE NATIVE PYTHON-NIX API BY DEFAULT FOR 10x-1500x PERFORMANCE!
# This activates the revolutionary performance breakthrough in NixOS 25.11+
if 'NIX_HUMANITY_PYTHON_BACKEND' not in os.environ:
    os.environ['NIX_HUMANITY_PYTHON_BACKEND'] = 'true'
    os.environ['LUMINOUS_NIX_PYTHON_BACKEND'] = 'true'  # Also set alternate name
    print("âœ¨ Native Python-Nix API enabled for maximum performance!", file=sys.stderr)

# Add src to path to ensure imports work
src_path = Path(__file__).parent.parent / "src"
if str(src_path) not in sys.path:
    sys.path.insert(0, str(src_path))

# Try different import locations
try:
    # First try the interfaces module
    from luminous_nix.interfaces.cli import main
except ImportError:
    try:
        # Try the CLI module directly
        from luminous_nix.cli import main
    except ImportError:
        try:
            # Try frontends
            frontends_path = Path(__file__).parent.parent / "frontends"
            sys.path.insert(0, str(frontends_path))
            from cli.adapter import main
        except ImportError:
            # Fallback to a simple implementation
            print("Error: Could not import CLI module")
            print("Try running: python3 -m luminous_nix.cli")
            sys.exit(1)

if __name__ == '__main__':
    main()
