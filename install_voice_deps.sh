#!/usr/bin/env bash
# Install voice interface dependencies with proper system libraries

echo "üé§ Installing Voice Interface Dependencies..."

# Check if we're in nix-shell
if [ -z "$IN_NIX_SHELL" ]; then
    echo "‚ö†Ô∏è  Not in nix-shell. Run 'nix-shell' first for system dependencies!"
    echo "   This provides PortAudio, FFmpeg, and other audio libraries."
    exit 1
fi

echo "‚úÖ Nix shell detected - system libraries available"

# Install PyAudio with proper build flags
echo "üì¶ Installing PyAudio with PortAudio support..."
PORTAUDIO_PATH=$(nix-build '<nixpkgs>' -A portaudio --no-out-link)
export CFLAGS="-I${PORTAUDIO_PATH}/include"
export LDFLAGS="-L${PORTAUDIO_PATH}/lib"

# Use pip directly since Poetry has issues with PyAudio
poetry run pip install --force-reinstall pyaudio

# Verify installation
echo "üîç Verifying voice dependencies..."
poetry run python -c "
import sys
print('Testing voice interface dependencies...')
try:
    import speech_recognition as sr
    print('‚úÖ SpeechRecognition installed')
except ImportError as e:
    print(f'‚ùå SpeechRecognition error: {e}')
    sys.exit(1)

try:
    import pyaudio
    print('‚úÖ PyAudio installed')
except ImportError as e:
    print(f'‚ùå PyAudio error: {e}')
    sys.exit(1)

try:
    import pyttsx3
    print('‚úÖ pyttsx3 (TTS) installed')
except ImportError as e:
    print(f'‚ùå pyttsx3 error: {e}')
    sys.exit(1)

try:
    import sounddevice as sd
    print('‚úÖ Sounddevice installed')
except ImportError as e:
    print(f'‚ùå Sounddevice error: {e}')
    sys.exit(1)

print()
print('üéâ All voice dependencies installed successfully!')
print('You can now run: poetry run python demo_voice.py')
"

echo ""
echo "üöÄ Voice interface dependencies ready!"
echo "   Run: poetry run python demo_voice.py"
echo "   Or:  poetry run python bin/nix-voice"