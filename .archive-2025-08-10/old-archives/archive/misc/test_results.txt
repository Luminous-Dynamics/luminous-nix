test_tui (unittest.loader._FailedTest.test_tui) ... ERROR
unit.test_backend_comprehensive (unittest.loader._FailedTest.unit.test_backend_comprehensive) ... ERROR
unit.test_cli_adapter (unittest.loader._FailedTest.unit.test_cli_adapter) ... ERROR
test_check_rich_available_false (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_check_rich_available_false)
Test rich library availability check when not available ... ok
test_check_rich_available_true (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_check_rich_available_true)
Test rich library availability check when available ... ok
test_display_response_calls_appropriate_method (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_display_response_calls_appropriate_method)
Test that display_response calls the right display method ... ok
test_display_response_rich_mode_fallback (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_display_response_rich_mode_fallback)
Test rich mode falling back to simple when import fails ... ok
test_display_response_rich_mode_success (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_display_response_rich_mode_success)
Test displaying response in rich mode when rich is available ... ok
test_display_response_simple_mode (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_display_response_simple_mode)
Test displaying response in simple mode ... ok
test_display_simple_no_suggestions (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_display_simple_no_suggestions)
Test simple display without suggestions ... ok
test_display_simple_with_feedback_request (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_display_simple_with_feedback_request)
Test simple display with feedback request ... ok
test_gather_feedback_keyboard_interrupt (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_gather_feedback_keyboard_interrupt)
Test handling keyboard interrupt during feedback ... ok
test_gather_feedback_no_with_comment (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_gather_feedback_no_with_comment)
Test gathering negative feedback with improvement comment ... ok
test_gather_feedback_no_without_comment (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_gather_feedback_no_without_comment)
Test gathering negative feedback without improvement comment ... ok
test_gather_feedback_yes (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_gather_feedback_yes)
Test gathering positive feedback ... ok
test_gather_feedback_yes_verbose (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_gather_feedback_yes_verbose)
Test gathering positive feedback with 'yes' ... ok
test_get_stats_nested_dict (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_get_stats_nested_dict)
Test displaying nested statistics ... ok
test_get_stats_simple_dict (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_get_stats_simple_dict)
Test getting and displaying simple statistics ... ok
test_get_user_id_with_user_env (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_get_user_id_with_user_env)
Test user ID retrieval with USER environment variable ... ok
test_get_user_id_without_user_env (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_get_user_id_without_user_env)
Test user ID retrieval without USER environment variable ... ok
test_initialization (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_initialization)
Test CLIAdapter initialization ... ok
test_process_query_custom_personality (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_process_query_custom_personality)
Test processing query with custom personality ... ok
test_process_query_dry_run_mode (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_process_query_dry_run_mode)
Test processing query with dry_run=True ... ok
test_process_query_execute_mode (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_process_query_execute_mode)
Test processing query with execute=True ... ok
test_process_query_explain_mode (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_process_query_explain_mode)
Test processing query with execute=False, dry_run=False ... ok
test_process_query_show_intent_no_target (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_process_query_show_intent_no_target)
Test show_intent with intent that has no target ... ok
test_process_query_with_show_intent (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_process_query_with_show_intent)
Test processing query with show_intent=True ... ok
test_rich_display_suggestions (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_rich_display_suggestions)
Test rich display with suggestions ... ok
test_rich_display_with_feedback (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_rich_display_with_feedback)
Test rich display with feedback request ... ok
test_set_personality_invalid (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_set_personality_invalid)
Test setting invalid personality style ... ok
test_set_personality_valid (unit.test_cli_adapter_comprehensive.TestCLIAdapter.test_set_personality_valid)
Test setting valid personality style ... ok
test_empty_suggestions_list (unit.test_cli_adapter_comprehensive.TestCLIAdapterEdgeCases.test_empty_suggestions_list)
Test handling empty suggestions list ... ok
test_feedback_skip_variations (unit.test_cli_adapter_comprehensive.TestCLIAdapterEdgeCases.test_feedback_skip_variations)
Test various ways to skip feedback ... ok
test_none_suggestions (unit.test_cli_adapter_comprehensive.TestCLIAdapterEdgeCases.test_none_suggestions)
Test handling None suggestions ... ok
test_check_rich_available_with_rich (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_check_rich_available_with_rich)
Test _check_rich_available when Rich is available ... ok
test_check_rich_available_without_rich (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_check_rich_available_without_rich)
Test _check_rich_available when Rich is not available ... ok
test_display_response_no_suggestions (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_display_response_no_suggestions)
Test display_response with no suggestions ... ok
test_display_response_simple_mode (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_display_response_simple_mode)
Test display_response in simple (non-Rich) mode ... ok
test_display_response_with_feedback_request (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_display_response_with_feedback_request)
Test display_response with feedback request ... ok
test_display_rich_mode_fallback (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_display_rich_mode_fallback)
Test _display_rich fallback to simple when Rich import fails ... ok
test_display_rich_mode_success (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_display_rich_mode_success)
Test _display_rich with Rich available ... ok
test_gather_feedback_helpful (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_gather_feedback_helpful)
Test _gather_feedback with positive response ... ok
test_gather_feedback_keyboard_interrupt (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_gather_feedback_keyboard_interrupt)
Test _gather_feedback handles KeyboardInterrupt gracefully ... ok
test_gather_feedback_not_helpful (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_gather_feedback_not_helpful)
Test _gather_feedback with negative response ... ok
test_gather_feedback_not_helpful_no_comment (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_gather_feedback_not_helpful_no_comment)
Test _gather_feedback with negative response but no improvement comment ... ok
test_gather_feedback_skip (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_gather_feedback_skip)
Test _gather_feedback with skip response ... ok
test_get_stats_nested_data (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_get_stats_nested_data)
Test get_stats with nested dictionary data ... ok
test_get_stats_simple_data (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_get_stats_simple_data)
Test get_stats with simple statistics ... ok
test_get_user_id_with_env_var (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_get_user_id_with_env_var)
Test _get_user_id with USER environment variable ... ok
test_get_user_id_without_env_var (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_get_user_id_without_env_var)
Test _get_user_id without USER environment variable ... ok
test_initialization_default_config (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_initialization_default_config)
Test CLIAdapter initialization with default configuration ... ok
test_process_query_default_parameters (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_process_query_default_parameters)
Test process_query with default parameters ... ok
test_process_query_show_intent_no_target (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_process_query_show_intent_no_target)
Test process_query with show_intent=True but no target ... ok
test_process_query_with_custom_personality (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_process_query_with_custom_personality)
Test process_query with custom personality ... ok
test_process_query_with_dry_run (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_process_query_with_dry_run)
Test process_query with dry_run=True ... ok
test_process_query_with_explain_mode (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_process_query_with_explain_mode)
Test process_query with execute=False (explain mode) ... ok
test_process_query_with_show_intent (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_process_query_with_show_intent)
Test process_query with show_intent=True ... ok
test_set_personality_invalid (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_set_personality_invalid)
Test set_personality with invalid style ... ok
test_set_personality_valid (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterComprehensive.test_set_personality_valid)
Test set_personality with valid style ... ok
test_core_initialization_failure (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterEdgeCases.test_core_initialization_failure)
Test handling of core initialization failure ... ok
test_empty_query (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterEdgeCases.test_empty_query)
Test process_query with empty string ... ok
test_personality_style_enum_conversion (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterEdgeCases.test_personality_style_enum_conversion)
Test PersonalityStyle enum handling ... ok
test_response_with_empty_suggestions (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterEdgeCases.test_response_with_empty_suggestions)
Test display_response with empty suggestions list ... ok
test_stats_with_none_values (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterEdgeCases.test_stats_with_none_values)
Test get_stats with None values in data ... ok
test_unicode_query (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterEdgeCases.test_unicode_query)
Test process_query with unicode characters ... ok
test_very_long_query (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterEdgeCases.test_very_long_query)
Test process_query with very long input ... ok
test_whitespace_only_query (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterEdgeCases.test_whitespace_only_query)
Test process_query with whitespace-only string ... ok
test_query_object_construction (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterIntegration.test_query_object_construction)
Test that Query objects are constructed correctly ... ok
test_session_consistency (unit.test_cli_adapter_comprehensive_v2.TestCLIAdapterIntegration.test_session_consistency)
Test that session ID remains consistent across queries ... ok
test_build_response_text_install (unit.test_core_engine.TestNixForHumanityCore.test_build_response_text_install)
Test response text building for install intent ... ERROR
test_build_response_text_search (unit.test_core_engine.TestNixForHumanityCore.test_build_response_text_search)
Test response text building for search intent ... ERROR
test_execute_plan_failure (unit.test_core_engine.TestNixForHumanityCore.test_execute_plan_failure)
Test failed plan execution ... ERROR
test_execute_plan_no_command (unit.test_core_engine.TestNixForHumanityCore.test_execute_plan_no_command)
Test execution when plan has no command ... ok
test_execute_plan_success (unit.test_core_engine.TestNixForHumanityCore.test_execute_plan_success)
Test successful plan execution ... ERROR
test_get_suggestions (unit.test_core_engine.TestNixForHumanityCore.test_get_suggestions)
Test suggestion generation ... ok
test_get_system_stats (unit.test_core_engine.TestNixForHumanityCore.test_get_system_stats)
Test getting system statistics ... ok
test_get_user_preferences (unit.test_core_engine.TestNixForHumanityCore.test_get_user_preferences)
Test getting user preferences ... ok
test_initialization (unit.test_core_engine.TestNixForHumanityCore.test_initialization)
Test core engine initialization ... ok
test_plan_help_query (unit.test_core_engine.TestNixForHumanityCore.test_plan_help_query)
Test planning for a help query ... ERROR
test_plan_install_query (unit.test_core_engine.TestNixForHumanityCore.test_plan_install_query)
Test planning for an install query ... ERROR
test_plan_remove_query (unit.test_core_engine.TestNixForHumanityCore.test_plan_remove_query)
Test planning for a remove query ... ERROR
test_plan_update_query (unit.test_core_engine.TestNixForHumanityCore.test_plan_update_query)
Test planning for an update query ... ERROR
test_plan_with_personality (unit.test_core_engine.TestNixForHumanityCore.test_plan_with_personality)
Test that personality affects the response ... ERROR
test_process_dry_run (unit.test_core_engine.TestNixForHumanityCore.test_process_dry_run)
Test process in dry run mode ... ERROR
test_process_full_pipeline (unit.test_core_engine.TestNixForHumanityCore.test_process_full_pipeline)
Test the full process pipeline ... ERROR
test_unknown_query_handling (unit.test_core_engine.TestNixForHumanityCore.test_unknown_query_handling)
Test handling of queries with unknown intent ... ERROR
unit.test_core_types (unittest.loader._FailedTest.unit.test_core_types) ... ERROR
unit.test_engine_enhanced (unittest.loader._FailedTest.unit.test_engine_enhanced) ... ERROR
test_build_command_install (unit.test_execution_engine.TestExecutionEngine.test_build_command_install)
Test building install command ... ERROR
test_build_command_remove (unit.test_execution_engine.TestExecutionEngine.test_build_command_remove)
Test building remove command ... ERROR
test_build_command_unknown (unit.test_execution_engine.TestExecutionEngine.test_build_command_unknown)
Test handling unknown command ... ERROR
test_build_command_update (unit.test_execution_engine.TestExecutionEngine.test_build_command_update)
Test building update command ... ERROR
test_command_exists (unit.test_execution_engine.TestExecutionEngine.test_command_exists)
Test command existence check ... ok
test_execute_dry_run (unit.test_execution_engine.TestExecutionEngine.test_execute_dry_run)
Test dry run execution ... ERROR
test_execute_explain_mode (unit.test_execution_engine.TestExecutionEngine.test_execute_explain_mode)
Test explain mode doesn't execute ... ERROR
test_execute_safe_search (unit.test_execution_engine.TestExecutionEngine.test_execute_safe_search)
Test safe search execution ... ERROR
test_execute_timeout (unit.test_execution_engine.TestExecutionEngine.test_execute_timeout)
Test handling of command timeout ... ERROR
test_execute_with_sudo (unit.test_execution_engine.TestExecutionEngine.test_execute_with_sudo)
Test execution of commands requiring sudo ... ERROR
test_explain_command (unit.test_execution_engine.TestExecutionEngine.test_explain_command)
Test command explanation ... ERROR
test_get_safe_env (unit.test_execution_engine.TestExecutionEngine.test_get_safe_env)
Test safe environment generation ... ok
test_validate_command_dangerous_patterns (unit.test_execution_engine.TestExecutionEngine.test_validate_command_dangerous_patterns)
Test detection of dangerous patterns ... ERROR
test_validate_command_not_exists (unit.test_execution_engine.TestExecutionEngine.test_validate_command_not_exists)
Test validation when command doesn't exist ... ERROR
test_validate_command_safe (unit.test_execution_engine.TestExecutionEngine.test_validate_command_safe)
Test validation of safe commands ... ERROR
test_validate_command_unsafe (unit.test_execution_engine.TestExecutionEngine.test_validate_command_unsafe)
Test validation rejects unsafe commands ... ERROR
test_build_command_install (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_build_command_install)
Test building install command ... ERROR
test_build_command_list (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_build_command_list)
Test building list command ... ERROR
test_build_command_remove (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_build_command_remove)
Test building remove command ... ERROR
test_build_command_rollback (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_build_command_rollback)
Test building rollback command ... ERROR
test_build_command_search (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_build_command_search)
Test building search command ... ERROR
test_build_command_unknown (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_build_command_unknown)
Test building unknown command returns None ... ERROR
test_build_command_update (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_build_command_update)
Test building update command ... ERROR
test_command_building_edge_cases (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_command_building_edge_cases)
Test command building with None or empty targets ... ERROR
test_command_exists (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_command_exists)
Test command existence check ... ok
test_concurrent_safety (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_concurrent_safety)
Test that engine can handle concurrent executions safely ... Exception in thread Thread-1 (execute_command):
Exception in thread Thread-2 (execute_command):
Traceback (most recent call last):
Exception in thread Thread-3 (execute_command):
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/threading.py", line 1043, in _bootstrap_inner
    self.run()
    ~~~~~~~~^^
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/threading.py", line 994, in run
    self._target(*self._args, **self._kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 494, in execute_command
    result = self.engine.execute(cmd, ExecutionMode.EXECUTE)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 114, in execute
    valid, error = self.validate_command(command)
                   ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 82, in validate_command
    if not command.safe:
           ^^^^^^^^^^^^
AttributeError: 'Command' object has no attribute 'safe'
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/threading.py", line 1043, in _bootstrap_inner
    self.run()
    ~~~~~~~~^^
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/threading.py", line 994, in run
    self._target(*self._args, **self._kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 494, in execute_command
    result = self.engine.execute(cmd, ExecutionMode.EXECUTE)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 114, in execute
    valid, error = self.validate_command(command)
                   ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 82, in validate_command
    if not command.safe:
           ^^^^^^^^^^^^
AttributeError: 'Command' object has no attribute 'safe'
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/threading.py", line 1043, in _bootstrap_inner
    self.run()
    ~~~~~~~~^^
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/threading.py", line 994, in run
    self._target(*self._args, **self._kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 494, in execute_command
    result = self.engine.execute(cmd, ExecutionMode.EXECUTE)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 114, in execute
    valid, error = self.validate_command(command)
                   ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 82, in validate_command
    if not command.safe:
           ^^^^^^^^^^^^
AttributeError: 'Command' object has no attribute 'safe'
Exception in thread Thread-4 (execute_command):
Traceback (most recent call last):
Exception in thread Thread-5 (execute_command):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/threading.py", line 1043, in _bootstrap_inner
    self.run()
    ~~~~~~~~^^
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/threading.py", line 994, in run
    self._target(*self._args, **self._kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 494, in execute_command
    result = self.engine.execute(cmd, ExecutionMode.EXECUTE)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 114, in execute
    valid, error = self.validate_command(command)
                   ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 82, in validate_command
    if not command.safe:
           ^^^^^^^^^^^^
AttributeError: 'Command' object has no attribute 'safe'
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/threading.py", line 1043, in _bootstrap_inner
    self.run()
    ~~~~~~~~^^
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/threading.py", line 994, in run
    self._target(*self._args, **self._kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 494, in execute_command
    result = self.engine.execute(cmd, ExecutionMode.EXECUTE)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 114, in execute
    valid, error = self.validate_command(command)
                   ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 82, in validate_command
    if not command.safe:
           ^^^^^^^^^^^^
AttributeError: 'Command' object has no attribute 'safe'
FAIL
test_dry_run_flag_addition (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_dry_run_flag_addition)
Test that dry-run flag is added correctly for nix commands ... ERROR
test_execute_dry_run_mode (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_dry_run_mode)
Test execution in dry run mode ... ERROR
test_execute_explain_mode (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_explain_mode)
Test execution in explain mode ... ERROR
test_execute_general_exception (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_general_exception)
Test general exception handling ... ERROR
test_execute_normal_mode (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_normal_mode)
Test normal execution mode ... ERROR
test_execute_safe_search_command_failure (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_safe_search_command_failure)
Test safe search when command fails ... ERROR
test_execute_safe_search_invalid_json (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_safe_search_invalid_json)
Test safe search with invalid JSON response ... ERROR
test_execute_safe_search_result_limit (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_safe_search_result_limit)
Test safe search limits results to 10 ... ERROR
test_execute_safe_search_success (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_safe_search_success)
Test safe search execution with valid results ... ERROR
test_execute_timeout (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_timeout)
Test command timeout handling ... ERROR
test_execute_with_custom_timeout (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_with_custom_timeout)
Test execution respects custom timeout ... ERROR
test_execute_with_sudo (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_with_sudo)
Test execution with sudo requirement ... ERROR
test_explain_command_coverage (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_explain_command_coverage)
Test command explanation for all command types ... ERROR
test_get_safe_env (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_get_safe_env)
Test safe environment generation ... ok
test_initialization (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_initialization)
Test default initialization ... ok
test_safe_environment_minimal (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_safe_environment_minimal)
Test safe environment with minimal system env ... ok
test_validate_command_dangerous_patterns (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_validate_command_dangerous_patterns)
Test validation detects dangerous patterns ... ERROR
test_validate_command_not_found (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_validate_command_not_found)
Test validation when command doesn't exist ... ERROR
test_validate_command_pipe_injection (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_validate_command_pipe_injection)
Test validation prevents pipe injection ... ERROR
test_validate_command_safe (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_validate_command_safe)
Test validation of safe commands ... ERROR
test_validate_command_unsafe (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_validate_command_unsafe)
Test validation rejects unsafe commands ... ERROR
test_validation_with_empty_args (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_validation_with_empty_args)
Test validation handles commands with empty args ... ERROR
test_create_rebuild_script (unit.test_executor.TestSafeExecutor.test_create_rebuild_script)
Test rebuild script creation ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestSafeExecutor.test_create_rebuild_script' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestSafeExecutor.test_create_rebuild_script of <unit.test_executor.TestSafeExecutor testMethod=test_create_rebuild_script>>)
  return self.run(*args, **kwds)
ok
test_debug_output (unit.test_executor.TestSafeExecutor.test_debug_output)
Test debug output when DEBUG env var is set ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestSafeExecutor.test_debug_output' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestSafeExecutor.test_debug_output of <unit.test_executor.TestSafeExecutor testMethod=test_debug_output>>)
  return self.run(*args, **kwds)
ok
test_execute_exception_handling (unit.test_executor.TestSafeExecutor.test_execute_exception_handling)
Test exception handling during execution ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestSafeExecutor.test_execute_exception_handling' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestSafeExecutor.test_execute_exception_handling of <unit.test_executor.TestSafeExecutor testMethod=test_execute_exception_handling>>)
  return self.run(*args, **kwds)
ok
test_execute_install_dry_run (unit.test_executor.TestSafeExecutor.test_execute_install_dry_run)
Test install execution in dry run mode ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestSafeExecutor.test_execute_install_dry_run' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestSafeExecutor.test_execute_install_dry_run of <unit.test_executor.TestSafeExecutor testMethod=test_execute_install_dry_run>>)
  return self.run(*args, **kwds)
ok
test_execute_install_no_package (unit.test_executor.TestSafeExecutor.test_execute_install_no_package)
Test install execution without package name ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestSafeExecutor.test_execute_install_no_package' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestSafeExecutor.test_execute_install_no_package of <unit.test_executor.TestSafeExecutor testMethod=test_execute_install_no_package>>)
  return self.run(*args, **kwds)
ok
test_execute_install_package (unit.test_executor.TestSafeExecutor.test_execute_install_package)
Test package installation execution ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestSafeExecutor.test_execute_install_package' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestSafeExecutor.test_execute_install_package of <unit.test_executor.TestSafeExecutor testMethod=test_execute_install_package>>)
  return self.run(*args, **kwds)
ok
test_execute_install_subprocess_failure (unit.test_executor.TestSafeExecutor.test_execute_install_subprocess_failure)
Test failed package installation via subprocess ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestSafeExecutor.test_execute_install_subprocess_failure' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestSafeExecutor.test_execute_install_subprocess_failure of <unit.test_executor.TestSafeExecutor testMethod=test_execute_install_subprocess_failure>>)
  return self.run(*args, **kwds)
ok
test_execute_install_subprocess_success (unit.test_executor.TestSafeExecutor.test_execute_install_subprocess_success)
Test successful package installation via subprocess ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestSafeExecutor.test_execute_install_subprocess_success' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestSafeExecutor.test_execute_install_subprocess_success of <unit.test_executor.TestSafeExecutor testMethod=test_execute_install_subprocess_success>>)
  return self.run(*args, **kwds)
ok
test_execute_install_with_progress (unit.test_executor.TestSafeExecutor.test_execute_install_with_progress)
Test install with progress callback ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestSafeExecutor.test_execute_install_with_progress' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestSafeExecutor.test_execute_install_with_progress of <unit.test_executor.TestSafeExecutor testMethod=test_execute_install_with_progress>>)
  return self.run(*args, **kwds)
ok
test_execute_rollback (unit.test_executor.TestSafeExecutor.test_execute_rollback)
Test system rollback execution ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestSafeExecutor.test_execute_rollback' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestSafeExecutor.test_execute_rollback of <unit.test_executor.TestSafeExecutor testMethod=test_execute_rollback>>)
  return self.run(*args, **kwds)
ok
test_execute_rollback_dry_run (unit.test_executor.TestSafeExecutor.test_execute_rollback_dry_run)
Test rollback in dry run mode ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestSafeExecutor.test_execute_rollback_dry_run' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestSafeExecutor.test_execute_rollback_dry_run of <unit.test_executor.TestSafeExecutor testMethod=test_execute_rollback_dry_run>>)
  return self.run(*args, **kwds)
ok
test_execute_search_no_query (unit.test_executor.TestSafeExecutor.test_execute_search_no_query)
Test search execution without query ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestSafeExecutor.test_execute_search_no_query' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestSafeExecutor.test_execute_search_no_query of <unit.test_executor.TestSafeExecutor testMethod=test_execute_search_no_query>>)
  return self.run(*args, **kwds)
ok
test_execute_search_no_results (unit.test_executor.TestSafeExecutor.test_execute_search_no_results)
Test search with no results ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestSafeExecutor.test_execute_search_no_results' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestSafeExecutor.test_execute_search_no_results of <unit.test_executor.TestSafeExecutor testMethod=test_execute_search_no_results>>)
  return self.run(*args, **kwds)
ok
test_execute_search_package (unit.test_executor.TestSafeExecutor.test_execute_search_package)
Test package search execution ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestSafeExecutor.test_execute_search_package' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestSafeExecutor.test_execute_search_package of <unit.test_executor.TestSafeExecutor testMethod=test_execute_search_package>>)
  return self.run(*args, **kwds)
ok
test_execute_search_with_results (unit.test_executor.TestSafeExecutor.test_execute_search_with_results)
Test search with results ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestSafeExecutor.test_execute_search_with_results' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestSafeExecutor.test_execute_search_with_results of <unit.test_executor.TestSafeExecutor testMethod=test_execute_search_with_results>>)
  return self.run(*args, **kwds)
ok
test_execute_unsupported_intent (unit.test_executor.TestSafeExecutor.test_execute_unsupported_intent)
Test execution with unsupported intent type ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestSafeExecutor.test_execute_unsupported_intent' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestSafeExecutor.test_execute_unsupported_intent of <unit.test_executor.TestSafeExecutor testMethod=test_execute_unsupported_intent>>)
  return self.run(*args, **kwds)
ok
test_execute_update_dry_run (unit.test_executor.TestSafeExecutor.test_execute_update_dry_run)
Test system update in dry run mode ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestSafeExecutor.test_execute_update_dry_run' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestSafeExecutor.test_execute_update_dry_run of <unit.test_executor.TestSafeExecutor testMethod=test_execute_update_dry_run>>)
  return self.run(*args, **kwds)
ok
test_execute_update_system (unit.test_executor.TestSafeExecutor.test_execute_update_system)
Test system update execution ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestSafeExecutor.test_execute_update_system' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestSafeExecutor.test_execute_update_system of <unit.test_executor.TestSafeExecutor testMethod=test_execute_update_system>>)
  return self.run(*args, **kwds)
ok
test_init_default (unit.test_executor.TestSafeExecutor.test_init_default)
Test initialization with default parameters ... ok
test_init_python_api_failure (unit.test_executor.TestSafeExecutor.test_init_python_api_failure)
Test Python API initialization when module not available ... ok
test_init_python_api_success (unit.test_executor.TestSafeExecutor.test_init_python_api_success)
Test successful Python API initialization ... ERROR
test_init_with_callback (unit.test_executor.TestSafeExecutor.test_init_with_callback)
Test initialization with progress callback ... ok
test_run_command_exception (unit.test_executor.TestSafeExecutor.test_run_command_exception)
Test command execution with exception ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestSafeExecutor.test_run_command_exception' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestSafeExecutor.test_run_command_exception of <unit.test_executor.TestSafeExecutor testMethod=test_run_command_exception>>)
  return self.run(*args, **kwds)
ok
test_run_command_success (unit.test_executor.TestSafeExecutor.test_run_command_success)
Test successful command execution ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestSafeExecutor.test_run_command_success' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestSafeExecutor.test_run_command_success of <unit.test_executor.TestSafeExecutor testMethod=test_run_command_success>>)
  return self.run(*args, **kwds)
ok
test_run_command_timeout (unit.test_executor.TestSafeExecutor.test_run_command_timeout)
Test command execution with timeout ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestSafeExecutor.test_run_command_timeout' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestSafeExecutor.test_run_command_timeout of <unit.test_executor.TestSafeExecutor testMethod=test_run_command_timeout>>)
  return self.run(*args, **kwds)
ok
unit.test_executor_comprehensive (unittest.loader._FailedTest.unit.test_executor_comprehensive) ... ERROR
test_context_creation (unit.test_headless_engine.TestDataClasses.test_context_creation)
Test Context dataclass ... ok
test_intent_creation (unit.test_headless_engine.TestDataClasses.test_intent_creation)
Test Intent dataclass ... ok
test_response_creation (unit.test_headless_engine.TestDataClasses.test_response_creation)
Test Response dataclass ... ok
test_response_to_dict (unit.test_headless_engine.TestDataClasses.test_response_to_dict)
Test Response.to_dict() method ... ok
test_execution_mode_values (unit.test_headless_engine.TestExecutionMode.test_execution_mode_values)
Test that ExecutionMode has expected values ... ok
test_collect_feedback_method (unit.test_headless_engine.TestHeadlessEngine.test_collect_feedback_method)
Test explicit feedback collection ... ok
test_command_extraction (unit.test_headless_engine.TestHeadlessEngine.test_command_extraction)
Test command extraction from solutions ... ok
test_error_handling (unit.test_headless_engine.TestHeadlessEngine.test_error_handling)
Test error handling in various scenarios ... ok
test_execution_modes (unit.test_headless_engine.TestHeadlessEngine.test_execution_modes)
Test different execution modes ... ok
test_feedback_generation (unit.test_headless_engine.TestHeadlessEngine.test_feedback_generation)
Test feedback request generation ... ok
test_get_stats (unit.test_headless_engine.TestHeadlessEngine.test_get_stats)
Test engine statistics collection ... ok
test_initialization (unit.test_headless_engine.TestHeadlessEngine.test_initialization)
Test HeadlessEngine initialization ... ok
test_intent_extraction (unit.test_headless_engine.TestHeadlessEngine.test_intent_extraction)
Test intent extraction logic ... FAIL
test_interaction_tracking (unit.test_headless_engine.TestHeadlessEngine.test_interaction_tracking)
Test that interactions are properly tracked ... FAIL
test_personality_application (unit.test_headless_engine.TestHeadlessEngine.test_personality_application)
Test personality application to responses ... FAIL
test_process_basic_query (unit.test_headless_engine.TestHeadlessEngine.test_process_basic_query)
Test processing a basic install query ... FAIL
test_process_with_plugin_handling (unit.test_headless_engine.TestHeadlessEngine.test_process_with_plugin_handling)
Test that plugins can handle intents ... FAIL
test_session_management (unit.test_headless_engine.TestHeadlessEngine.test_session_management)
Test session tracking ... ok
test_shutdown (unit.test_headless_engine.TestHeadlessEngine.test_shutdown)
Test clean shutdown ... ok
test_visual_generation (unit.test_headless_engine.TestHeadlessEngine.test_visual_generation)
Test visual representation generation ... ok
test_full_query_pipeline (unit.test_headless_engine.TestIntegration.test_full_query_pipeline)
Test a complete query through the engine ... 2025-08-01 00:38:21,465 - core.plugin_loader - ERROR - No plugin class found in example_weather_plugin
2025-08-01 00:38:21,465 - core.plugin_loader - INFO - Successfully loaded plugin: friendly_personality
2025-08-01 00:38:21,465 - core.plugin_loader - INFO - Successfully loaded plugin: minimal_personality
2025-08-01 00:38:21,466 - core.plugin_loader - INFO - Successfully loaded plugin: package_search_plugin
2025-08-01 00:38:21,466 - core.plugin_loader - INFO - Successfully loaded plugin: install_instructions_plugin
FAIL
test_async_recognize_coroutine (unit.test_intent.TestAsyncIntentRecognition.test_async_recognize_coroutine)
Test that async recognize returns a coroutine ... ERROR
test_async_sync_consistency (unit.test_intent.TestAsyncIntentRecognition.test_async_sync_consistency)
Test that async and sync recognize give same results ... ERROR
test_intent_creation (unit.test_intent.TestIntent.test_intent_creation)
Test creating an Intent instance ... ok
test_async_recognize (unit.test_intent.TestIntentRecognizer.test_async_recognize)
Test async version of recognize method ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestIntentRecognizer.test_async_recognize' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestIntentRecognizer.test_async_recognize of <unit.test_intent.TestIntentRecognizer testMethod=test_async_recognize>>)
  return self.run(*args, **kwds)
ok
test_case_insensitivity (unit.test_intent.TestIntentRecognizer.test_case_insensitivity)
Test that intent recognition is case-insensitive ... ok
test_confidence_scores (unit.test_intent.TestIntentRecognizer.test_confidence_scores)
Test that confidence scores are reasonable ... ok
test_configure_intent_recognition (unit.test_intent.TestIntentRecognizer.test_configure_intent_recognition)
Test recognition of configure intents ... 
  test_configure_intent_recognition (unit.test_intent.TestIntentRecognizer.test_configure_intent_recognition) (text='set up docker')
Test recognition of configure intents ... ERROR
  test_configure_intent_recognition (unit.test_intent.TestIntentRecognizer.test_configure_intent_recognition) (text='help me set up vpn')
Test recognition of configure intents ... ERROR
test_explain_intent_recognition (unit.test_intent.TestIntentRecognizer.test_explain_intent_recognition)
Test recognition of explain intents ... 
  test_explain_intent_recognition (unit.test_intent.TestIntentRecognizer.test_explain_intent_recognition) (text='how does nix work')
Test recognition of explain intents ... FAIL
  test_explain_intent_recognition (unit.test_intent.TestIntentRecognizer.test_explain_intent_recognition) (text='how to use home-manager work')
Test recognition of explain intents ... FAIL
test_extra_words_handling (unit.test_intent.TestIntentRecognizer.test_extra_words_handling)
Test handling of extra words in commands ... 
  test_extra_words_handling (unit.test_intent.TestIntentRecognizer.test_extra_words_handling) (text='I really need to install vim right now')
Test handling of extra words in commands ... ERROR
test_extract_entities (unit.test_intent.TestIntentRecognizer.test_extract_entities)
Test entity extraction for different intent types ... ok
test_initialization (unit.test_intent.TestIntentRecognizer.test_initialization)
Test IntentRecognizer initialization ... ok
test_install_intent_recognition (unit.test_intent.TestIntentRecognizer.test_install_intent_recognition)
Test recognition of install intents ... 
  test_install_intent_recognition (unit.test_intent.TestIntentRecognizer.test_install_intent_recognition) (text='I need python')
Test recognition of install intents ... ERROR
  test_install_intent_recognition (unit.test_intent.TestIntentRecognizer.test_install_intent_recognition) (text='I want vim')
Test recognition of install intents ... ERROR
  test_install_intent_recognition (unit.test_intent.TestIntentRecognizer.test_install_intent_recognition) (text='set up zsh')
Test recognition of install intents ... ERROR
test_multi_word_packages (unit.test_intent.TestIntentRecognizer.test_multi_word_packages)
Test handling of multi-word package names ... FAIL
test_normalize_text (unit.test_intent.TestIntentRecognizer.test_normalize_text)
Test text normalization ... ok
test_package_alias_resolution (unit.test_intent.TestIntentRecognizer.test_package_alias_resolution)
Test package name alias resolution ... ok
test_pattern_priority (unit.test_intent.TestIntentRecognizer.test_pattern_priority)
Test that patterns are matched in the correct priority order ... FAIL
test_raw_text_preservation (unit.test_intent.TestIntentRecognizer.test_raw_text_preservation)
Test that raw text is preserved in intent ... FAIL
test_rollback_intent_recognition (unit.test_intent.TestIntentRecognizer.test_rollback_intent_recognition)
Test recognition of rollback intents ... ok
test_search_intent_recognition (unit.test_intent.TestIntentRecognizer.test_search_intent_recognition)
Test recognition of search intents ... 
  test_search_intent_recognition (unit.test_intent.TestIntentRecognizer.test_search_intent_recognition) (text='what packages are available')
Test recognition of search intents ... FAIL
test_unknown_intent (unit.test_intent.TestIntentRecognizer.test_unknown_intent)
Test recognition of unknown intents ... 
  test_unknown_intent (unit.test_intent.TestIntentRecognizer.test_unknown_intent) (text='what time is it')
Test recognition of unknown intents ... FAIL
test_update_intent_recognition (unit.test_intent.TestIntentRecognizer.test_update_intent_recognition)
Test recognition of update intents ... ok
test_intent_type_values (unit.test_intent.TestIntentType.test_intent_type_values)
Test intent type string values ... ok
test_intent_types_defined (unit.test_intent.TestIntentType.test_intent_types_defined)
Test all expected intent types are defined ... ok
unit.test_intent_comprehensive (unittest.loader._FailedTest.unit.test_intent_comprehensive) ... ERROR
test_case_insensitivity (unit.test_intent_engine.TestIntentEngine.test_case_insensitivity)
Test that recognition is case insensitive ... ERROR
test_extract_package_name (unit.test_intent_engine.TestIntentEngine.test_extract_package_name)
Test package name extraction from text ... ok
test_info_patterns_extended (unit.test_intent_engine.TestIntentEngine.test_info_patterns_extended)
Test extended info patterns including new additions ... 
  test_info_patterns_extended (unit.test_intent_engine.TestIntentEngine.test_info_patterns_extended) (text='show installed')
Test extended info patterns including new additions ... ERROR
  test_info_patterns_extended (unit.test_intent_engine.TestIntentEngine.test_info_patterns_extended) (text='show me installed')
Test extended info patterns including new additions ... ERROR
  test_info_patterns_extended (unit.test_intent_engine.TestIntentEngine.test_info_patterns_extended) (text='what is installed')
Test extended info patterns including new additions ... ERROR
  test_info_patterns_extended (unit.test_intent_engine.TestIntentEngine.test_info_patterns_extended) (text='list packages')
Test extended info patterns including new additions ... ERROR
  test_info_patterns_extended (unit.test_intent_engine.TestIntentEngine.test_info_patterns_extended) (text='system info')
Test extended info patterns including new additions ... ERROR
test_metadata_preservation (unit.test_intent_engine.TestIntentEngine.test_metadata_preservation)
Test that original input is preserved in metadata ... ERROR
test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases)
Test package alias resolution ... 
  test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='install browser')
Test package alias resolution ... ERROR
  test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='get web browser')
Test package alias resolution ... ERROR
  test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='add chrome')
Test package alias resolution ... ERROR
  test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='install vscode')
Test package alias resolution ... ERROR
  test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='get code')
Test package alias resolution ... ERROR
  test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='install vim')
Test package alias resolution ... ERROR
  test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='add vi')
Test package alias resolution ... ERROR
  test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='get editor')
Test package alias resolution ... ERROR
  test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='install text editor')
Test package alias resolution ... ERROR
  test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='add python')
Test package alias resolution ... ERROR
  test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='get node')
Test package alias resolution ... ERROR
  test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='install docker')
Test package alias resolution ... ERROR
test_package_update_patterns (unit.test_intent_engine.TestIntentEngine.test_package_update_patterns)
Test that package update patterns work correctly ... 
  test_package_update_patterns (unit.test_intent_engine.TestIntentEngine.test_package_update_patterns) (text='update firefox')
Test that package update patterns work correctly ... ERROR
  test_package_update_patterns (unit.test_intent_engine.TestIntentEngine.test_package_update_patterns) (text='upgrade vim')
Test that package update patterns work correctly ... ERROR
  test_package_update_patterns (unit.test_intent_engine.TestIntentEngine.test_package_update_patterns) (text='update python3')
Test that package update patterns work correctly ... ERROR
  test_package_update_patterns (unit.test_intent_engine.TestIntentEngine.test_package_update_patterns) (text='upgrade nodejs')
Test that package update patterns work correctly ... ERROR
test_recognize_help_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_help_patterns)
Test recognition of help intent patterns ... 
  test_recognize_help_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_help_patterns) (text='help')
Test recognition of help intent patterns ... ERROR
  test_recognize_help_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_help_patterns) (text='help me')
Test recognition of help intent patterns ... ERROR
  test_recognize_help_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_help_patterns) (text='what can you do')
Test recognition of help intent patterns ... ERROR
  test_recognize_help_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_help_patterns) (text='how do i use this')
Test recognition of help intent patterns ... ERROR
  test_recognize_help_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_help_patterns) (text='how do i install')
Test recognition of help intent patterns ... ERROR
test_recognize_info_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_info_patterns)
Test recognition of info intent patterns ... 
  test_recognize_info_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_info_patterns) (text='list packages')
Test recognition of info intent patterns ... ERROR
  test_recognize_info_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_info_patterns) (text='system info')
Test recognition of info intent patterns ... ERROR
test_recognize_install_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_install_patterns)
Test recognition of install intent patterns ... 
  test_recognize_install_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_install_patterns) (text='install firefox')
Test recognition of install intent patterns ... ERROR
  test_recognize_install_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_install_patterns) (text='add vim')
Test recognition of install intent patterns ... ERROR
  test_recognize_install_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_install_patterns) (text='get python3')
Test recognition of install intent patterns ... ERROR
  test_recognize_install_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_install_patterns) (text='download docker')
Test recognition of install intent patterns ... ERROR
  test_recognize_install_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_install_patterns) (text='i need nodejs')
Test recognition of install intent patterns ... ERROR
  test_recognize_install_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_install_patterns) (text='i want vscode')
Test recognition of install intent patterns ... ERROR
  test_recognize_install_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_install_patterns) (text='need emacs')
Test recognition of install intent patterns ... ERROR
  test_recognize_install_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_install_patterns) (text='want git')
Test recognition of install intent patterns ... ERROR
  test_recognize_install_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_install_patterns) (text='get me htop')
Test recognition of install intent patterns ... ERROR
  test_recognize_install_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_install_patterns) (text='firefox please')
Test recognition of install intent patterns ... ERROR
test_recognize_remove_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_remove_patterns)
Test recognition of remove intent patterns ... 
  test_recognize_remove_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_remove_patterns) (text='remove firefox')
Test recognition of remove intent patterns ... ERROR
  test_recognize_remove_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_remove_patterns) (text='uninstall vim')
Test recognition of remove intent patterns ... ERROR
  test_recognize_remove_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_remove_patterns) (text='delete python3')
Test recognition of remove intent patterns ... ERROR
  test_recognize_remove_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_remove_patterns) (text='firefox is gone')
Test recognition of remove intent patterns ... ERROR
test_recognize_rollback_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_rollback_patterns)
Test recognition of rollback intent patterns ... 
  test_recognize_rollback_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_rollback_patterns) (text='rollback')
Test recognition of rollback intent patterns ... ERROR
  test_recognize_rollback_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_rollback_patterns) (text='revert')
Test recognition of rollback intent patterns ... ERROR
  test_recognize_rollback_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_rollback_patterns) (text='undo')
Test recognition of rollback intent patterns ... ERROR
  test_recognize_rollback_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_rollback_patterns) (text='go back')
Test recognition of rollback intent patterns ... ERROR
  test_recognize_rollback_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_rollback_patterns) (text='previous generation')
Test recognition of rollback intent patterns ... ERROR
test_recognize_search_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_search_patterns)
Test recognition of search intent patterns ... 
  test_recognize_search_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_search_patterns) (text='search firefox')
Test recognition of search intent patterns ... ERROR
  test_recognize_search_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_search_patterns) (text='find python')
Test recognition of search intent patterns ... ERROR
  test_recognize_search_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_search_patterns) (text='look for editor')
Test recognition of search intent patterns ... ERROR
  test_recognize_search_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_search_patterns) (text='what is docker')
Test recognition of search intent patterns ... ERROR
  test_recognize_search_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_search_patterns) (text='is there vim')
Test recognition of search intent patterns ... ERROR
  test_recognize_search_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_search_patterns) (text='show me nodejs')
Test recognition of search intent patterns ... ERROR
test_recognize_unknown_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_unknown_patterns)
Test handling of unknown patterns ... 
  test_recognize_unknown_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_unknown_patterns) (text='random gibberish')
Test handling of unknown patterns ... ERROR
  test_recognize_unknown_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_unknown_patterns) (text='do something weird')
Test handling of unknown patterns ... ERROR
  test_recognize_unknown_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_unknown_patterns) (text='make coffee')
Test handling of unknown patterns ... ERROR
  test_recognize_unknown_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_unknown_patterns) (text='compile the kernel')
Test handling of unknown patterns ... ERROR
  test_recognize_unknown_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_unknown_patterns) (text='')
Test handling of unknown patterns ... ERROR
test_recognize_update_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_update_patterns)
Test recognition of update intent patterns ... 
  test_recognize_update_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_update_patterns) (text='update')
Test recognition of update intent patterns ... ERROR
  test_recognize_update_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_update_patterns) (text='upgrade')
Test recognition of update intent patterns ... ERROR
  test_recognize_update_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_update_patterns) (text='update system')
Test recognition of update intent patterns ... ERROR
  test_recognize_update_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_update_patterns) (text='upgrade everything')
Test recognition of update intent patterns ... ERROR
  test_recognize_update_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_update_patterns) (text='update all')
Test recognition of update intent patterns ... ERROR
  test_recognize_update_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_update_patterns) (text='system update')
Test recognition of update intent patterns ... ERROR
  test_recognize_update_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_update_patterns) (text='system upgrade')
Test recognition of update intent patterns ... ERROR
  test_recognize_update_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_update_patterns) (text='make everything current')
Test recognition of update intent patterns ... ERROR
  test_recognize_update_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_update_patterns) (text='update my system')
Test recognition of update intent patterns ... ERROR
test_suggest_alternatives (unit.test_intent_engine.TestIntentEngine.test_suggest_alternatives)
Test alternative suggestions for misspellings ... ok
test_system_vs_package_update_distinction (unit.test_intent_engine.TestIntentEngine.test_system_vs_package_update_distinction)
Test that system updates are distinguished from package updates ... 
  test_system_vs_package_update_distinction (unit.test_intent_engine.TestIntentEngine.test_system_vs_package_update_distinction) (text='update system')
Test that system updates are distinguished from package updates ... ERROR
  test_system_vs_package_update_distinction (unit.test_intent_engine.TestIntentEngine.test_system_vs_package_update_distinction) (text='upgrade everything')
Test that system updates are distinguished from package updates ... ERROR
  test_system_vs_package_update_distinction (unit.test_intent_engine.TestIntentEngine.test_system_vs_package_update_distinction) (text='update all')
Test that system updates are distinguished from package updates ... ERROR
  test_system_vs_package_update_distinction (unit.test_intent_engine.TestIntentEngine.test_system_vs_package_update_distinction) (text='system update')
Test that system updates are distinguished from package updates ... ERROR
  test_system_vs_package_update_distinction (unit.test_intent_engine.TestIntentEngine.test_system_vs_package_update_distinction) (text='update my system')
Test that system updates are distinguished from package updates ... ERROR
  test_system_vs_package_update_distinction (unit.test_intent_engine.TestIntentEngine.test_system_vs_package_update_distinction) (text='upgrade the whole system')
Test that system updates are distinguished from package updates ... ERROR
  test_system_vs_package_update_distinction (unit.test_intent_engine.TestIntentEngine.test_system_vs_package_update_distinction) (text='update firefox')
Test that system updates are distinguished from package updates ... ERROR
  test_system_vs_package_update_distinction (unit.test_intent_engine.TestIntentEngine.test_system_vs_package_update_distinction) (text='upgrade vim')
Test that system updates are distinguished from package updates ... ERROR
  test_system_vs_package_update_distinction (unit.test_intent_engine.TestIntentEngine.test_system_vs_package_update_distinction) (text='update python3')
Test that system updates are distinguished from package updates ... ERROR
test_all_intent_types_covered (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_all_intent_types_covered)
Test that all IntentType enum values have patterns ... FAIL
test_case_insensitivity (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_case_insensitivity)
Test that recognition is case-insensitive ... 
  test_case_insensitivity (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_case_insensitivity) (input='INSTALL FIREFOX')
Test that recognition is case-insensitive ... ERROR
  test_case_insensitivity (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_case_insensitivity) (input='Install Firefox')
Test that recognition is case-insensitive ... ERROR
  test_case_insensitivity (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_case_insensitivity) (input='InStAlL fIrEfOx')
Test that recognition is case-insensitive ... ERROR
  test_case_insensitivity (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_case_insensitivity) (input='REMOVE vim')
Test that recognition is case-insensitive ... ERROR
  test_case_insensitivity (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_case_insensitivity) (input='UPDATE')
Test that recognition is case-insensitive ... ERROR
test_complex_patterns (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_complex_patterns)
Test complex real-world patterns ... 
  test_complex_patterns (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_complex_patterns) (input='hey can you install that firefox thing for me')
Test complex real-world patterns ... ERROR
  test_complex_patterns (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_complex_patterns) (input='i think i need to remove python from my system')
Test complex real-world patterns ... ERROR
  test_complex_patterns (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_complex_patterns) (input='could you search for text editors')
Test complex real-world patterns ... ERROR
  test_complex_patterns (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_complex_patterns) (input='please help me update everything')
Test complex real-world patterns ... ERROR
test_concurrent_recognition (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_concurrent_recognition)
Test thread safety of intent recognition ... Exception in thread Thread-7 (recognize_intent):
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/threading.py", line 1043, in _bootstrap_inner
    self.run()
    ~~~~~~~~^^
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/threading.py", line 994, in run
    self._target(*self._args, **self._kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 391, in recognize_intent
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'
Exception in thread Thread-8 (recognize_intent):
Exception in thread Thread-9 (recognize_intent):
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/threading.py", line 1043, in _bootstrap_inner
    self.run()
    ~~~~~~~~^^
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/threading.py", line 994, in run
    self._target(*self._args, **self._kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 391, in recognize_intent
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'
Exception in thread Thread-10 (recognize_intent):
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/threading.py", line 1043, in _bootstrap_inner
    self.run()
    ~~~~~~~~^^
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/threading.py", line 994, in run
    self._target(*self._args, **self._kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 391, in recognize_intent
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
Traceback (most recent call last):
TypeError: Intent.__init__() got an unexpected keyword argument 'target'
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/threading.py", line 1043, in _bootstrap_inner
    self.run()
    ~~~~~~~~^^
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/threading.py", line 994, in run
    self._target(*self._args, **self._kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 391, in recognize_intent
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
Exception in thread Thread-11 (recognize_intent):
TypeError: Intent.__init__() got an unexpected keyword argument 'target'
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/threading.py", line 1043, in _bootstrap_inner
    self.run()
    ~~~~~~~~^^
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/threading.py", line 994, in run
    self._target(*self._args, **self._kwargs)
    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 391, in recognize_intent
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'
FAIL
test_confidence_scores (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_confidence_scores)
Test confidence scores are appropriate ... ERROR
test_edge_cases (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_edge_cases)
Test edge cases and boundary conditions ... ERROR
test_extra_whitespace_handling (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_extra_whitespace_handling)
Test handling of extra whitespace ... 
  test_extra_whitespace_handling (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_extra_whitespace_handling) (input='  install   firefox  ')
Test handling of extra whitespace ... ERROR
  test_extra_whitespace_handling (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_extra_whitespace_handling) (input='\tremove\tvim\t')
Test handling of extra whitespace ... ERROR
  test_extra_whitespace_handling (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_extra_whitespace_handling) (input='   update   ')
Test handling of extra whitespace ... ERROR
test_extract_package_name (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_extract_package_name)
Test package name extraction helper ... ok
test_extract_package_name_empty (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_extract_package_name_empty)
Test package extraction with noise words only ... ok
test_extract_package_name_with_aliases (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_extract_package_name_with_aliases)
Test package extraction applies aliases ... ok
test_help_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_help_intent)
Test help intent recognition ... 
  test_help_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_help_intent) (input='help')
Test help intent recognition ... ERROR
  test_help_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_help_intent) (input='help me')
Test help intent recognition ... ERROR
  test_help_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_help_intent) (input='what can you do')
Test help intent recognition ... ERROR
  test_help_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_help_intent) (input='how do i install something')
Test help intent recognition ... ERROR
test_info_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_info_intent)
Test info intent recognition ... 
  test_info_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_info_intent) (input='what is installed')
Test info intent recognition ... ERROR
  test_info_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_info_intent) (input='show me installed')
Test info intent recognition ... ERROR
  test_info_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_info_intent) (input='list packages')
Test info intent recognition ... ERROR
  test_info_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_info_intent) (input='system info')
Test info intent recognition ... ERROR
test_initialization (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_initialization)
Test IntentEngine initializes properly ... ok
test_install_intent_basic (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_basic)
Test basic install intent recognition ... 
  test_install_intent_basic (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_basic) (input='install firefox')
Test basic install intent recognition ... ERROR
  test_install_intent_basic (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_basic) (input='add nodejs')
Test basic install intent recognition ... ERROR
  test_install_intent_basic (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_basic) (input='get python')
Test basic install intent recognition ... ERROR
  test_install_intent_basic (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_basic) (input='download docker')
Test basic install intent recognition ... ERROR
test_install_intent_conversational (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_conversational)
Test conversational install patterns ... 
  test_install_intent_conversational (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_conversational) (input='i need firefox')
Test conversational install patterns ... ERROR
  test_install_intent_conversational (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_conversational) (input='i want vscode')
Test conversational install patterns ... ERROR
  test_install_intent_conversational (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_conversational) (input='need vim')
Test conversational install patterns ... ERROR
  test_install_intent_conversational (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_conversational) (input='want docker')
Test conversational install patterns ... ERROR
  test_install_intent_conversational (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_conversational) (input='get me python')
Test conversational install patterns ... ERROR
  test_install_intent_conversational (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_conversational) (input='firefox please')
Test conversational install patterns ... ERROR
test_install_intent_with_aliases (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_with_aliases)
Test install with package aliases ... 
  test_install_intent_with_aliases (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_with_aliases) (input='install browser')
Test install with package aliases ... ERROR
  test_install_intent_with_aliases (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_with_aliases) (input='add web browser')
Test install with package aliases ... ERROR
  test_install_intent_with_aliases (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_with_aliases) (input='get code')
Test install with package aliases ... ERROR
  test_install_intent_with_aliases (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_with_aliases) (input='install editor')
Test install with package aliases ... ERROR
  test_install_intent_with_aliases (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_with_aliases) (input='add text editor')
Test install with package aliases ... ERROR
  test_install_intent_with_aliases (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_with_aliases) (input='install node')
Test install with package aliases ... ERROR
  test_install_intent_with_aliases (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_with_aliases) (input='get vi')
Test install with package aliases ... ERROR
test_metadata_preservation (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_metadata_preservation)
Test that original input is preserved in metadata ... ERROR
test_pattern_group_extraction (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_pattern_group_extraction)
Test correct group extraction from patterns ... ERROR
test_pattern_priority (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_pattern_priority)
Test that more specific patterns take priority ... ERROR
test_remove_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_remove_intent)
Test remove intent recognition ... 
  test_remove_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_remove_intent) (input='remove firefox')
Test remove intent recognition ... ERROR
  test_remove_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_remove_intent) (input='uninstall python')
Test remove intent recognition ... ERROR
  test_remove_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_remove_intent) (input='delete docker')
Test remove intent recognition ... ERROR
  test_remove_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_remove_intent) (input='get rid of vim')
Test remove intent recognition ... ERROR
  test_remove_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_remove_intent) (input='firefox is gone')
Test remove intent recognition ... ERROR
test_rollback_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_rollback_intent)
Test rollback intent recognition ... 
  test_rollback_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_rollback_intent) (input='rollback')
Test rollback intent recognition ... ERROR
  test_rollback_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_rollback_intent) (input='revert')
Test rollback intent recognition ... ERROR
  test_rollback_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_rollback_intent) (input='undo')
Test rollback intent recognition ... ERROR
  test_rollback_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_rollback_intent) (input='go back')
Test rollback intent recognition ... ERROR
  test_rollback_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_rollback_intent) (input='previous generation')
Test rollback intent recognition ... ERROR
test_search_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_search_intent)
Test search intent recognition ... 
  test_search_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_search_intent) (input='search firefox')
Test search intent recognition ... ERROR
  test_search_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_search_intent) (input='find python')
Test search intent recognition ... ERROR
  test_search_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_search_intent) (input='look for docker')
Test search intent recognition ... ERROR
  test_search_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_search_intent) (input='what is vim')
Test search intent recognition ... ERROR
  test_search_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_search_intent) (input='is there nodejs')
Test search intent recognition ... ERROR
  test_search_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_search_intent) (input='show me browsers')
Test search intent recognition ... ERROR
test_suggest_alternatives_ambiguous (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_suggest_alternatives_ambiguous)
Test suggestions for ambiguous requests ... ok
test_suggest_alternatives_empty (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_suggest_alternatives_empty)
Test no suggestions for clear requests ... ok
test_suggest_alternatives_typos (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_suggest_alternatives_typos)
Test suggestion generation for common typos ... ok
test_unknown_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_unknown_intent)
Test unknown intent handling ... 
  test_unknown_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_unknown_intent) (input='make me a sandwich')
Test unknown intent handling ... ERROR
  test_unknown_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_unknown_intent) (input="what's the weather")
Test unknown intent handling ... ERROR
  test_unknown_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_unknown_intent) (input='hello world')
Test unknown intent handling ... ERROR
  test_unknown_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_unknown_intent) (input='123456')
Test unknown intent handling ... ERROR
  test_unknown_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_unknown_intent) (input='')
Test unknown intent handling ... ERROR
test_update_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_update_intent)
Test update intent recognition ... 
  test_update_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_update_intent) (input='update')
Test update intent recognition ... ERROR
  test_update_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_update_intent) (input='upgrade')
Test update intent recognition ... ERROR
  test_update_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_update_intent) (input='update system')
Test update intent recognition ... ERROR
  test_update_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_update_intent) (input='upgrade everything')
Test update intent recognition ... ERROR
  test_update_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_update_intent) (input='update all')
Test update intent recognition ... ERROR
  test_update_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_update_intent) (input='update my system')
Test update intent recognition ... ERROR
  test_update_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_update_intent) (input='system update')
Test update intent recognition ... ERROR
  test_update_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_update_intent) (input='make everything current')
Test update intent recognition ... ERROR
test_cache_expiry (unit.test_knowledge_base.TestKnowledgeBase.test_cache_expiry)
Test that cache expires after 24 hours ... ok
test_cache_search_results (unit.test_knowledge_base.TestKnowledgeBase.test_cache_search_results)
Test caching and retrieving search results ... ok
test_database_initialization (unit.test_knowledge_base.TestKnowledgeBase.test_database_initialization)
Test that database tables are created correctly ... ok
test_get_install_methods (unit.test_knowledge_base.TestKnowledgeBase.test_get_install_methods)
Test getting installation methods for a package ... ok
test_get_problem_solution (unit.test_knowledge_base.TestKnowledgeBase.test_get_problem_solution)
Test finding solutions for common problems ... ok
test_get_problem_solution_not_found (unit.test_knowledge_base.TestKnowledgeBase.test_get_problem_solution_not_found)
Test when no problem solution is found ... ok
test_get_solution_install (unit.test_knowledge_base.TestKnowledgeBase.test_get_solution_install)
Test getting installation solution ... ok
test_get_solution_unknown (unit.test_knowledge_base.TestKnowledgeBase.test_get_solution_unknown)
Test handling of unknown intent ... ok
test_package_info_dataclass (unit.test_knowledge_base.TestKnowledgeBase.test_package_info_dataclass)
Test the PackageInfo dataclass ... ok
test_solutions_have_all_intent_types (unit.test_knowledge_base.TestKnowledgeBase.test_solutions_have_all_intent_types)
Test that we have solutions for all main intent types ... ok
test_cache_expiration (unit.test_knowledge_base_enhanced.TestKnowledgeBaseEnhanced.test_cache_expiration)
Test that package cache entries can be updated ... ok
test_check_package_cache (unit.test_knowledge_base_enhanced.TestKnowledgeBaseEnhanced.test_check_package_cache)
Test package cache functionality ... ok
test_concurrent_cache_access (unit.test_knowledge_base_enhanced.TestKnowledgeBaseEnhanced.test_concurrent_cache_access)
Test concurrent package cache access ... ok
test_database_initialization (unit.test_knowledge_base_enhanced.TestKnowledgeBaseEnhanced.test_database_initialization)
Test that database is properly initialized with schema ... ok
test_empty_database (unit.test_knowledge_base_enhanced.TestKnowledgeBaseEnhanced.test_empty_database)
Test behavior with empty database ... ok
test_get_all_intent_types (unit.test_knowledge_base_enhanced.TestKnowledgeBaseEnhanced.test_get_all_intent_types)
Test getting solutions for all intent types ... FAIL
test_get_install_methods (unit.test_knowledge_base_enhanced.TestKnowledgeBaseEnhanced.test_get_install_methods)
Test getting installation methods ... FAIL
test_get_problem_solution (unit.test_knowledge_base_enhanced.TestKnowledgeBaseEnhanced.test_get_problem_solution)
Test getting solutions for common problems ... FAIL
test_get_solution_by_intent (unit.test_knowledge_base_enhanced.TestKnowledgeBaseEnhanced.test_get_solution_by_intent)
Test getting solutions by intent type ... ERROR
test_get_solution_with_context (unit.test_knowledge_base_enhanced.TestKnowledgeBaseEnhanced.test_get_solution_with_context)
Test getting solutions with context parameters ... ERROR
test_install_methods_structure (unit.test_knowledge_base_enhanced.TestKnowledgeBaseEnhanced.test_install_methods_structure)
Test the structure of install methods ... ERROR
test_performance_large_cache (unit.test_knowledge_base_enhanced.TestKnowledgeBaseEnhanced.test_performance_large_cache)
Test performance with large package cache ... ok
test_solution_formatting (unit.test_knowledge_base_enhanced.TestKnowledgeBaseEnhanced.test_solution_formatting)
Test that solutions are properly formatted ... FAIL
test_sql_injection_protection (unit.test_knowledge_base_enhanced.TestKnowledgeBaseEnhanced.test_sql_injection_protection)
Test that SQL injection attempts are handled safely ... ok
test_database_creation (unit.test_knowledge_comprehensive.TestKnowledgeBase.test_database_creation)
Test database and tables are created correctly ... ok
test_database_creation_when_exists (unit.test_knowledge_comprehensive.TestKnowledgeBase.test_database_creation_when_exists)
Test database initialization when database already exists ... ok
test_database_persistence (unit.test_knowledge_comprehensive.TestKnowledgeBase.test_database_persistence)
Test that database persists between instances ... ok
test_get_best_practice (unit.test_knowledge_comprehensive.TestKnowledgeBase.test_get_best_practice)
Test getting best practices ... ok
test_get_best_practice_not_found (unit.test_knowledge_comprehensive.TestKnowledgeBase.test_get_best_practice_not_found)
Test getting non-existent best practice ... ok
test_get_installation_methods (unit.test_knowledge_comprehensive.TestKnowledgeBase.test_get_installation_methods)
Test getting installation methods for a package ... ok
test_get_problem_solution (unit.test_knowledge_comprehensive.TestKnowledgeBase.test_get_problem_solution)
Test getting solution for common problems ... ok
test_get_problem_solution_not_found (unit.test_knowledge_comprehensive.TestKnowledgeBase.test_get_problem_solution_not_found)
Test getting solution for non-existent problem ... ok
test_get_solution_install_package (unit.test_knowledge_comprehensive.TestKnowledgeBase.test_get_solution_install_package)
Test getting solution for install_package intent ... ok
test_get_solution_nonexistent_intent (unit.test_knowledge_comprehensive.TestKnowledgeBase.test_get_solution_nonexistent_intent)
Test getting solution for non-existent intent ... ok
test_get_solution_other_intents (unit.test_knowledge_comprehensive.TestKnowledgeBase.test_get_solution_other_intents)
Test getting solutions for non-install intents ... ok
test_initial_knowledge_population (unit.test_knowledge_comprehensive.TestKnowledgeBase.test_initial_knowledge_population)
Test initial knowledge is populated correctly ... ok
test_initialization (unit.test_knowledge_comprehensive.TestKnowledgeBase.test_initialization)
Test KnowledgeBase initialization ... ok
test_package_name_extraction_edge_cases (unit.test_knowledge_comprehensive.TestKnowledgeBase.test_package_name_extraction_edge_cases)
Test package name extraction with various edge cases ... ok
test_search_knowledge (unit.test_knowledge_comprehensive.TestKnowledgeBase.test_search_knowledge)
Test searching across all knowledge ... ok
test_search_knowledge_no_results (unit.test_knowledge_comprehensive.TestKnowledgeBase.test_search_knowledge_no_results)
Test searching with no results ... ok
test_sql_injection_prevention (unit.test_knowledge_comprehensive.TestKnowledgeBase.test_sql_injection_prevention)
Test that SQL injection is prevented ... ok
test_concurrent_access (unit.test_knowledge_comprehensive.TestKnowledgeBaseIntegration.test_concurrent_access)
Test that multiple instances can access the database ... ok
test_full_workflow (unit.test_knowledge_comprehensive.TestKnowledgeBaseIntegration.test_full_workflow)
Test a complete workflow of operations ... ok
test_database_initialization (unit.test_learning_system.TestLearningSystem.test_database_initialization)
Test that database tables are created correctly ... ok
test_dataclass_initialization (unit.test_learning_system.TestLearningSystem.test_dataclass_initialization)
Test dataclass creation and defaults ... ok
test_get_common_patterns (unit.test_learning_system.TestLearningSystem.test_get_common_patterns)
Test getting common query patterns ... ok
test_get_feedback_summary (unit.test_learning_system.TestLearningSystem.test_get_feedback_summary)
Test getting feedback summary ... ok
test_get_success_rate (unit.test_learning_system.TestLearningSystem.test_get_success_rate)
Test calculating success rate for specific intent ... ok
test_get_success_rate_no_interactions (unit.test_learning_system.TestLearningSystem.test_get_success_rate_no_interactions)
Test success rate with no interactions ... ok
test_learn_error_solution (unit.test_learning_system.TestLearningSystem.test_learn_error_solution)
Test learning error solutions ... ok
test_learn_preference (unit.test_learning_system.TestLearningSystem.test_learn_preference)
Test learning user preferences ... ok
test_record_interaction (unit.test_learning_system.TestLearningSystem.test_record_interaction)
Test recording user interactions ... ok
test_update_preference (unit.test_learning_system.TestLearningSystem.test_update_preference)
Test updating existing preferences ... ok
test_batch_operations_efficiency (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_batch_operations_efficiency)
Test efficiency of batch operations ... ok
test_concurrent_database_access (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_concurrent_database_access)
Test concurrent access to database ... ok
test_corrupted_database_recovery (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_corrupted_database_recovery)
Test recovery from corrupted database ... ok
test_database_connection_failure (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_database_connection_failure)
Test handling of database connection failures ... ok
test_database_schema_consistency (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_database_schema_consistency)
Test that database schema remains consistent ... ok
test_empty_and_whitespace_inputs (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_empty_and_whitespace_inputs)
Test handling of empty and whitespace-only inputs ... ok
test_enable_federated_learning (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_enable_federated_learning)
Test enabling/disabling federated learning ... ok
test_export_learning_data_aggregated (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_export_learning_data_aggregated)
Test exporting aggregated anonymized data ... ok
test_export_learning_data_user_specific (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_export_learning_data_user_specific)
Test exporting specific user data ... ok
test_get_learning_statistics (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_get_learning_statistics)
Test getting comprehensive learning statistics ... ok
test_get_pattern_insights (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_get_pattern_insights)
Test getting pattern insights from learning data ... ok
test_invalid_interaction_data (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_invalid_interaction_data)
Test handling of invalid interaction data ... ok
test_large_data_handling (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_large_data_handling)
Test handling of large datasets ... ok
test_memory_usage_optimization (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_memory_usage_optimization)
Test that memory usage doesn't grow excessively ... skipped 'psutil not available'
test_query_performance (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_query_performance)
Test that queries perform within reasonable time limits ... ok
test_record_feedback (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_record_feedback)
Test recording feedback on interactions ... ok
test_record_feedback_by_session (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_record_feedback_by_session)
Test recording feedback by session ID ... ok
test_reset_learning_data_all (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_reset_learning_data_all)
Test resetting all learning data ... ok
test_reset_learning_data_user_specific (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_reset_learning_data_user_specific)
Test resetting data for specific user ... ok
test_sql_injection_prevention (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_sql_injection_prevention)
Test that SQL injection is prevented ... ok
test_suggest_improvements (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_suggest_improvements)
Test improvement suggestions based on learning ... ok
test_suggest_improvements_good_success_rate (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_suggest_improvements_good_success_rate)
Test suggestions for intent with good success rate ... ok
test_timestamp_edge_cases (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_timestamp_edge_cases)
Test edge cases with timestamps ... ok
test_unicode_and_special_characters (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_unicode_and_special_characters)
Test handling of unicode and special characters ... ok
test_update_user_preference (unit.test_learning_system_comprehensive.TestLearningSystemComprehensive.test_update_user_preference)
Test updating user preferences via interface method ... ok
test_boundary_timestamp_queries (unit.test_learning_system_edge_cases.TestLearningSystemEdgeCases.test_boundary_timestamp_queries)
Test timestamp boundary conditions ... ok
test_concurrent_database_modifications (unit.test_learning_system_edge_cases.TestLearningSystemEdgeCases.test_concurrent_database_modifications)
Test handling of concurrent database modifications ... ok
test_data_type_coercion (unit.test_learning_system_edge_cases.TestLearningSystemEdgeCases.test_data_type_coercion)
Test handling of incorrect data types ... ok
test_database_permissions (unit.test_learning_system_edge_cases.TestLearningSystemEdgeCases.test_database_permissions)
Test database file permissions ... ERROR
test_database_recovery_from_lock (unit.test_learning_system_edge_cases.TestLearningSystemEdgeCases.test_database_recovery_from_lock)
Test recovery from database lock situations ... ok
test_db_path_as_string (unit.test_learning_system_edge_cases.TestLearningSystemEdgeCases.test_db_path_as_string)
Test providing database path as string ... ok
test_default_db_path_creation (unit.test_learning_system_edge_cases.TestLearningSystemEdgeCases.test_default_db_path_creation)
Test default database path creation ... ok
test_disk_space_simulation (unit.test_learning_system_edge_cases.TestLearningSystemEdgeCases.test_disk_space_simulation)
Test behavior when disk space is low ... ok
test_empty_database_operations (unit.test_learning_system_edge_cases.TestLearningSystemEdgeCases.test_empty_database_operations)
Test operations on empty database ... ok
test_interaction_validation (unit.test_learning_system_edge_cases.TestLearningSystemEdgeCases.test_interaction_validation)
Test validation of interaction data ... ok
test_large_limit_values (unit.test_learning_system_edge_cases.TestLearningSystemEdgeCases.test_large_limit_values)
Test handling of large limit values ... ok
test_memory_stress (unit.test_learning_system_edge_cases.TestLearningSystemEdgeCases.test_memory_stress)
Test system under memory stress ... ok
test_partial_data_corruption (unit.test_learning_system_edge_cases.TestLearningSystemEdgeCases.test_partial_data_corruption)
Test recovery from partial data corruption ... ok
test_preference_value_types (unit.test_learning_system_edge_cases.TestLearningSystemEdgeCases.test_preference_value_types)
Test different types of preference values ... ok
test_rapid_operations (unit.test_learning_system_edge_cases.TestLearningSystemEdgeCases.test_rapid_operations)
Test rapid successive operations ... ok
test_single_record_edge_cases (unit.test_learning_system_edge_cases.TestLearningSystemEdgeCases.test_single_record_edge_cases)
Test behavior with single records ... ok
test_sql_injection_comprehensive (unit.test_learning_system_edge_cases.TestLearningSystemEdgeCases.test_sql_injection_comprehensive)
Comprehensive SQL injection prevention tests ... ok
test_zero_and_negative_limits (unit.test_learning_system_edge_cases.TestLearningSystemEdgeCases.test_zero_and_negative_limits)
Test handling of zero and negative limits ... ok
test_concurrent_writes (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_concurrent_writes)
Test that concurrent writes don't cause issues ... ok
test_data_persistence (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_data_persistence)
Test that data persists across instances ... ok
test_database_initialization (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_database_initialization)
Test that all required tables are created ... ok
test_error_solution_ranking (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_error_solution_ranking)
Test that most successful solutions are returned first ... ok
test_get_common_patterns (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_get_common_patterns)
Test retrieving common query patterns ... ok
test_get_common_patterns_empty (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_get_common_patterns_empty)
Test common patterns with no data ... ok
test_get_error_solution (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_get_error_solution)
Test retrieving error solutions ... ok
test_get_error_solution_not_found (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_get_error_solution_not_found)
Test behavior when no solution exists ... ok
test_get_error_solution_partial_match (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_get_error_solution_partial_match)
Test partial matching for error solutions ... FAIL
test_get_feedback_summary (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_get_feedback_summary)
Test feedback summary calculation ... ok
test_get_feedback_summary_empty (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_get_feedback_summary_empty)
Test feedback summary with no data ... ok
test_get_success_rate (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_get_success_rate)
Test calculating success rate for intents ... ok
test_get_success_rate_time_window (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_get_success_rate_time_window)
Test that success rate only considers recent interactions ... ok
test_get_user_preferences (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_get_user_preferences)
Test retrieving user preferences ... ok
test_get_user_preferences_empty (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_get_user_preferences_empty)
Test getting preferences for user with no data ... ok
test_learn_error_solution (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_learn_error_solution)
Test learning from error resolutions ... ok
test_learn_error_solution_increment (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_learn_error_solution_increment)
Test that successful solutions increment count ... ok
test_learn_preference_new (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_learn_preference_new)
Test learning a new preference ... ok
test_learn_preference_update_existing (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_learn_preference_update_existing)
Test updating an existing preference ... ok
test_preference_types (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_preference_types)
Test different types of preferences ... ok
test_record_interaction_basic (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_record_interaction_basic)
Test basic interaction recording ... ok
test_record_multiple_interactions (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_record_multiple_interactions)
Test recording multiple interactions ... ok
test_session_tracking (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_session_tracking)
Test session-based interaction tracking ... ok
test_timestamp_handling (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_timestamp_handling)
Test that timestamps are properly handled ... ok
unit.test_nix_integration (unittest.loader._FailedTest.unit.test_nix_integration) ... ERROR
test_enhance_result (unit.test_nix_integration_clean.TestNixOSIntegration.test_enhance_result)
Test result enhancement with educational context ... ok
test_execute_intent_install_package (unit.test_nix_integration_clean.TestNixOSIntegration.test_execute_intent_install_package)
Test executing install package intent ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestNixOSIntegration.test_execute_intent_install_package' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestNixOSIntegration.test_execute_intent_install_package of <unit.test_nix_integration_clean.TestNixOSIntegration testMethod=test_execute_intent_install_package>>)
  return self.run(*args, **kwds)
ok
test_execute_intent_update_system (unit.test_nix_integration_clean.TestNixOSIntegration.test_execute_intent_update_system)
Test executing system update intent ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestNixOSIntegration.test_execute_intent_update_system' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestNixOSIntegration.test_execute_intent_update_system of <unit.test_nix_integration_clean.TestNixOSIntegration testMethod=test_execute_intent_update_system>>)
  return self.run(*args, **kwds)
ok
test_execute_intent_with_error (unit.test_nix_integration_clean.TestNixOSIntegration.test_execute_intent_with_error)
Test error handling in execute_intent ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestNixOSIntegration.test_execute_intent_with_error' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestNixOSIntegration.test_execute_intent_with_error of <unit.test_nix_integration_clean.TestNixOSIntegration testMethod=test_execute_intent_with_error>>)
  return self.run(*args, **kwds)
ok
test_get_status (unit.test_nix_integration_clean.TestNixOSIntegration.test_get_status)
Test getting integration status ... ok
test_get_status_after_operations (unit.test_nix_integration_clean.TestNixOSIntegration.test_get_status_after_operations)
Test status after operations ... ok
test_get_suggestions_for_error (unit.test_nix_integration_clean.TestNixOSIntegration.test_get_suggestions_for_error)
Test error suggestions ... ok
test_initialization (unit.test_nix_integration_clean.TestNixOSIntegration.test_initialization)
Test NixOSIntegration initialization ... ok
test_initialization_with_progress_callback (unit.test_nix_integration_clean.TestNixOSIntegration.test_initialization_with_progress_callback)
Test initialization with progress callback ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py:493: ResourceWarning: unclosed database in <sqlite3.Connection object at 0x7ff402418f40>
  __dict__['_mock_call_args_list'] = _CallList()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py:493: ResourceWarning: unclosed database in <sqlite3.Connection object at 0x7ff402419210>
  __dict__['_mock_call_args_list'] = _CallList()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py:493: ResourceWarning: unclosed database in <sqlite3.Connection object at 0x7ff401e233d0>
  __dict__['_mock_call_args_list'] = _CallList()
ResourceWarning: Enable tracemalloc to get the object allocation traceback
ok
test_map_intent_to_operation (unit.test_nix_integration_clean.TestNixOSIntegration.test_map_intent_to_operation)
Test intent to operation mapping ... ok
test_multiple_operations (unit.test_nix_integration_clean.TestNixOSIntegration.test_multiple_operations)
Test multiple operations increment counter ... /nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:606: RuntimeWarning: coroutine 'TestNixOSIntegration.test_multiple_operations' was never awaited
  if method() is not None:
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/case.py:707: DeprecationWarning: It is deprecated to return a value that is not None from a test case (<bound method TestNixOSIntegration.test_multiple_operations of <unit.test_nix_integration_clean.TestNixOSIntegration testMethod=test_multiple_operations>>)
  return self.run(*args, **kwds)
ok
test_unsupported_intent (unit.test_nix_integration_clean.TestNixOSIntegration.test_unsupported_intent)
Test handling of unsupported intent ... ok
test_ambiguous_inputs (unit.test_nlp_comprehensive.TestNLPComprehensive.test_ambiguous_inputs)
Test handling of ambiguous inputs ... 
  test_ambiguous_inputs (unit.test_nlp_comprehensive.TestNLPComprehensive.test_ambiguous_inputs) (text='install')
Test handling of ambiguous inputs ... ERROR
  test_ambiguous_inputs (unit.test_nlp_comprehensive.TestNLPComprehensive.test_ambiguous_inputs) (text='remove')
Test handling of ambiguous inputs ... ERROR
  test_ambiguous_inputs (unit.test_nlp_comprehensive.TestNLPComprehensive.test_ambiguous_inputs) (text='update firefox')
Test handling of ambiguous inputs ... ERROR
  test_ambiguous_inputs (unit.test_nlp_comprehensive.TestNLPComprehensive.test_ambiguous_inputs) (text='get')
Test handling of ambiguous inputs ... ERROR
test_case_insensitive_processing (unit.test_nlp_comprehensive.TestNLPComprehensive.test_case_insensitive_processing)
Test that all processing is case insensitive ... 
  test_case_insensitive_processing (unit.test_nlp_comprehensive.TestNLPComprehensive.test_case_insensitive_processing) (text='INSTALL FIREFOX')
Test that all processing is case insensitive ... ERROR
  test_case_insensitive_processing (unit.test_nlp_comprehensive.TestNLPComprehensive.test_case_insensitive_processing) (text='Install Firefox')
Test that all processing is case insensitive ... ERROR
  test_case_insensitive_processing (unit.test_nlp_comprehensive.TestNLPComprehensive.test_case_insensitive_processing) (text='iNsTaLl FiReFoX')
Test that all processing is case insensitive ... ERROR
  test_case_insensitive_processing (unit.test_nlp_comprehensive.TestNLPComprehensive.test_case_insensitive_processing) (text='InStAlL fIrEfOx')
Test that all processing is case insensitive ... ERROR
test_complex_remove_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_complex_remove_patterns)
Test complex removal patterns ... 
  test_complex_remove_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_complex_remove_patterns) (text='remove that firefox browser')
Test complex removal patterns ... ERROR
  test_complex_remove_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_complex_remove_patterns) (text='get rid of the python stuff')
Test complex removal patterns ... ERROR
  test_complex_remove_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_complex_remove_patterns) (text='uninstall vim editor completely')
Test complex removal patterns ... ERROR
  test_complex_remove_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_complex_remove_patterns) (text='delete docker and all its dependencies')
Test complex removal patterns ... ERROR
  test_complex_remove_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_complex_remove_patterns) (text='firefox needs to be gone')
Test complex removal patterns ... ERROR
test_confidence_levels (unit.test_nlp_comprehensive.TestNLPComprehensive.test_confidence_levels)
Test that confidence levels are appropriate ... 
  test_confidence_levels (unit.test_nlp_comprehensive.TestNLPComprehensive.test_confidence_levels) (text='install firefox')
Test that confidence levels are appropriate ... ERROR
  test_confidence_levels (unit.test_nlp_comprehensive.TestNLPComprehensive.test_confidence_levels) (text='remove vim')
Test that confidence levels are appropriate ... ERROR
  test_confidence_levels (unit.test_nlp_comprehensive.TestNLPComprehensive.test_confidence_levels) (text='update system')
Test that confidence levels are appropriate ... ERROR
  test_confidence_levels (unit.test_nlp_comprehensive.TestNLPComprehensive.test_confidence_levels) (text='help')
Test that confidence levels are appropriate ... ERROR
test_conversational_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_conversational_patterns)
Test natural conversational patterns ... 
  test_conversational_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_conversational_patterns) (text='can you please install firefox for me')
Test natural conversational patterns ... ERROR
  test_conversational_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_conversational_patterns) (text='would you mind adding vim')
Test natural conversational patterns ... ERROR
  test_conversational_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_conversational_patterns) (text='could i get python please')
Test natural conversational patterns ... ERROR
  test_conversational_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_conversational_patterns) (text='is it possible to remove docker')
Test natural conversational patterns ... ERROR
  test_conversational_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_conversational_patterns) (text="can you show me what's installed")
Test natural conversational patterns ... ERROR
  test_conversational_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_conversational_patterns) (text='help me understand updates')
Test natural conversational patterns ... ERROR
test_error_recovery (unit.test_nlp_comprehensive.TestNLPComprehensive.test_error_recovery)
Test error recovery from malformed inputs ... 
  test_error_recovery (unit.test_nlp_comprehensive.TestNLPComprehensive.test_error_recovery) (text="''")
Test error recovery from malformed inputs ... ERROR
  test_error_recovery (unit.test_nlp_comprehensive.TestNLPComprehensive.test_error_recovery) (text="'   '")
Test error recovery from malformed inputs ... ERROR
  test_error_recovery (unit.test_nlp_comprehensive.TestNLPComprehensive.test_error_recovery) (text="'install     '")
Test error recovery from malformed inputs ... ERROR
  test_error_recovery (unit.test_nlp_comprehensive.TestNLPComprehensive.test_error_recovery) (text="'INSTALL FIREFOX!!!'")
Test error recovery from malformed inputs ... ERROR
  test_error_recovery (unit.test_nlp_comprehensive.TestNLPComprehensive.test_error_recovery) (text="'install\\tfirefox\\n'")
Test error recovery from malformed inputs ... ERROR
test_help_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_help_patterns)
Test help request patterns ... 
  test_help_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_help_patterns) (text='help me with nixos')
Test help request patterns ... ERROR
  test_help_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_help_patterns) (text='how do i install software')
Test help request patterns ... ERROR
  test_help_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_help_patterns) (text='what can this system do')
Test help request patterns ... ERROR
  test_help_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_help_patterns) (text='i need assistance')
Test help request patterns ... ERROR
  test_help_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_help_patterns) (text='explain how to use this')
Test help request patterns ... ERROR
  test_help_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_help_patterns) (text='tutorial please')
Test help request patterns ... ERROR
test_metadata_preservation (unit.test_nlp_comprehensive.TestNLPComprehensive.test_metadata_preservation)
Test that metadata is properly preserved ... ERROR
test_noise_word_filtering (unit.test_nlp_comprehensive.TestNLPComprehensive.test_noise_word_filtering)
Test that noise words are properly filtered ... 
  test_noise_word_filtering (unit.test_nlp_comprehensive.TestNLPComprehensive.test_noise_word_filtering) (text='please install firefox for me now')
Test that noise words are properly filtered ... ERROR
  test_noise_word_filtering (unit.test_nlp_comprehensive.TestNLPComprehensive.test_noise_word_filtering) (text='i really need vim editor that works')
Test that noise words are properly filtered ... ERROR
  test_noise_word_filtering (unit.test_nlp_comprehensive.TestNLPComprehensive.test_noise_word_filtering) (text='can you please add the python package')
Test that noise words are properly filtered ... ERROR
  test_noise_word_filtering (unit.test_nlp_comprehensive.TestNLPComprehensive.test_noise_word_filtering) (text='install the docker container system please')
Test that noise words are properly filtered ... ERROR
test_package_alias_resolution (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_alias_resolution)
Test comprehensive package alias resolution ... 
  test_package_alias_resolution (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_alias_resolution) (text='install browser', expected='firefox')
Test comprehensive package alias resolution ... ERROR
  test_package_alias_resolution (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_alias_resolution) (text='add web browser', expected='firefox')
Test comprehensive package alias resolution ... ERROR
  test_package_alias_resolution (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_alias_resolution) (text='get text editor', expected='vim')
Test comprehensive package alias resolution ... ERROR
  test_package_alias_resolution (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_alias_resolution) (text='install editor', expected='vim')
Test comprehensive package alias resolution ... ERROR
  test_package_alias_resolution (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_alias_resolution) (text='add code editor', expected='vscode')
Test comprehensive package alias resolution ... ERROR
  test_package_alias_resolution (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_alias_resolution) (text='get programming language python', expected='python3')
Test comprehensive package alias resolution ... ERROR
  test_package_alias_resolution (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_alias_resolution) (text='install node runtime', expected='nodejs')
Test comprehensive package alias resolution ... ERROR
test_package_name_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_name_variations)
Test various ways to express package names ... 
  test_package_name_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_name_variations) (text='install the firefox web browser')
Test various ways to express package names ... ERROR
  test_package_name_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_name_variations) (text='add python programming language')
Test various ways to express package names ... ERROR
  test_package_name_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_name_variations) (text='get vim text editor')
Test various ways to express package names ... ERROR
  test_package_name_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_name_variations) (text='download docker container system')
Test various ways to express package names ... ERROR
  test_package_name_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_name_variations) (text='install nodejs javascript runtime')
Test various ways to express package names ... ERROR
test_pattern_precedence (unit.test_nlp_comprehensive.TestNLPComprehensive.test_pattern_precedence)
Test that pattern precedence works correctly ... ERROR
test_search_information_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_search_information_patterns)
Test search and information gathering patterns ... 
  test_search_information_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_search_information_patterns) (text='search for text editors')
Test search and information gathering patterns ... ERROR
  test_search_information_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_search_information_patterns) (text='find programming languages')
Test search and information gathering patterns ... ERROR
  test_search_information_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_search_information_patterns) (text='what is available for browsing')
Test search and information gathering patterns ... ERROR
  test_search_information_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_search_information_patterns) (text='show me all editors')
Test search and information gathering patterns ... ERROR
  test_search_information_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_search_information_patterns) (text='is there a good terminal emulator')
Test search and information gathering patterns ... ERROR
test_suggestion_generation (unit.test_nlp_comprehensive.TestNLPComprehensive.test_suggestion_generation)
Test alternative suggestion generation ... ok
test_typo_tolerance_firefox (unit.test_nlp_comprehensive.TestNLPComprehensive.test_typo_tolerance_firefox)
Test tolerance for common Firefox typos ... 
  test_typo_tolerance_firefox (unit.test_nlp_comprehensive.TestNLPComprehensive.test_typo_tolerance_firefox) (typo='install fierfix')
Test tolerance for common Firefox typos ... ERROR
  test_typo_tolerance_firefox (unit.test_nlp_comprehensive.TestNLPComprehensive.test_typo_tolerance_firefox) (typo='get firfox')
Test tolerance for common Firefox typos ... ERROR
  test_typo_tolerance_firefox (unit.test_nlp_comprehensive.TestNLPComprehensive.test_typo_tolerance_firefox) (typo='add fierfox')
Test tolerance for common Firefox typos ... ERROR
  test_typo_tolerance_firefox (unit.test_nlp_comprehensive.TestNLPComprehensive.test_typo_tolerance_firefox) (typo='download firefix')
Test tolerance for common Firefox typos ... ERROR
  test_typo_tolerance_firefox (unit.test_nlp_comprehensive.TestNLPComprehensive.test_typo_tolerance_firefox) (typo='i need fireofx')
Test tolerance for common Firefox typos ... ERROR
test_update_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_update_variations)
Test different ways to ask for updates ... 
  test_update_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_update_variations) (text='update everything on my system')
Test different ways to ask for updates ... ERROR
  test_update_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_update_variations) (text='upgrade all packages')
Test different ways to ask for updates ... ERROR
  test_update_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_update_variations) (text='make my system current')
Test different ways to ask for updates ... ERROR
  test_update_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_update_variations) (text='system upgrade please')
Test different ways to ask for updates ... ERROR
  test_update_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_update_variations) (text='update the whole system')
Test different ways to ask for updates ... ERROR
  test_update_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_update_variations) (text='upgrade my nixos')
Test different ways to ask for updates ... ERROR
test_whitespace_tolerance (unit.test_nlp_comprehensive.TestNLPComprehensive.test_whitespace_tolerance)
Test tolerance for various whitespace patterns ... 
  test_whitespace_tolerance (unit.test_nlp_comprehensive.TestNLPComprehensive.test_whitespace_tolerance) (text="'install  firefox'")
Test tolerance for various whitespace patterns ... ERROR
  test_whitespace_tolerance (unit.test_nlp_comprehensive.TestNLPComprehensive.test_whitespace_tolerance) (text="' install firefox '")
Test tolerance for various whitespace patterns ... ERROR
  test_whitespace_tolerance (unit.test_nlp_comprehensive.TestNLPComprehensive.test_whitespace_tolerance) (text="'install\\tfirefox'")
Test tolerance for various whitespace patterns ... ERROR
  test_whitespace_tolerance (unit.test_nlp_comprehensive.TestNLPComprehensive.test_whitespace_tolerance) (text="'install   firefox   please'")
Test tolerance for various whitespace patterns ... ERROR
test_extremely_long_input (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_extremely_long_input)
Test handling of very long inputs ... ERROR
test_nested_package_references (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_nested_package_references)
Test complex nested package references ... 
  test_nested_package_references (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_nested_package_references) (text='install firefox or chrome browser')
Test complex nested package references ... ERROR
  test_nested_package_references (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_nested_package_references) (text='add vim or emacs editor')
Test complex nested package references ... ERROR
  test_nested_package_references (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_nested_package_references) (text='get python or node runtime')
Test complex nested package references ... ERROR
test_special_characters (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_special_characters)
Test handling of special characters ... 
  test_special_characters (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_special_characters) (text='install firefox!!!')
Test handling of special characters ... ERROR
  test_special_characters (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_special_characters) (text='install firefox???')
Test handling of special characters ... ERROR
  test_special_characters (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_special_characters) (text='install firefox...')
Test handling of special characters ... ERROR
  test_special_characters (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_special_characters) (text='install firefox;')
Test handling of special characters ... ERROR
  test_special_characters (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_special_characters) (text='install firefox,')
Test handling of special characters ... ERROR
test_unicode_handling (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_unicode_handling)
Test handling of unicode characters ... 
  test_unicode_handling (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_unicode_handling) (text='install firefox ♥')
Test handling of unicode characters ... ERROR
  test_unicode_handling (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_unicode_handling) (text='install firefox 🔥')
Test handling of unicode characters ... ERROR
  test_unicode_handling (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_unicode_handling) (text='install firefox café')
Test handling of unicode characters ... ERROR
test_adapt_response_preserves_content (unit.test_personality_system.TestPersonalitySystem.test_adapt_response_preserves_content)
Test that adapt_response always includes original content ... ok
test_adaptive_personality (unit.test_personality_system.TestPersonalitySystem.test_adaptive_personality)
Test adaptive personality style ... ok
test_adaptive_response_method (unit.test_personality_system.TestPersonalitySystem.test_adaptive_response_method)
Test the _adaptive_response private method behavior ... ok
test_concurrent_user_preferences (unit.test_personality_system.TestPersonalitySystem.test_concurrent_user_preferences)
Test that multiple users' preferences don't interfere ... ok
test_edge_case_none_style (unit.test_personality_system.TestPersonalitySystem.test_edge_case_none_style)
Test handling when style is explicitly set to None ... ok
test_empty_query_handling (unit.test_personality_system.TestPersonalitySystem.test_empty_query_handling)
Test adaptation with empty query string ... ok
test_empty_response_handling (unit.test_personality_system.TestPersonalitySystem.test_empty_response_handling)
Test handling of empty responses ... ok
test_encouraging_personality (unit.test_personality_system.TestPersonalitySystem.test_encouraging_personality)
Test encouraging personality style ... ok
test_friendly_personality (unit.test_personality_system.TestPersonalitySystem.test_friendly_personality)
Test friendly personality style ... ok
test_get_style_description (unit.test_personality_system.TestPersonalitySystem.test_get_style_description)
Test getting human-readable style descriptions ... ok
test_get_user_style (unit.test_personality_system.TestPersonalitySystem.test_get_user_style)
Test retrieving user style preferences ... ok
test_initialization (unit.test_personality_system.TestPersonalitySystem.test_initialization)
Test personality system initialization ... ok
test_learn_preference (unit.test_personality_system.TestPersonalitySystem.test_learn_preference)
Test user preference learning ... ok
test_long_response_handling (unit.test_personality_system.TestPersonalitySystem.test_long_response_handling)
Test handling of very long responses ... ok
test_minimal_personality (unit.test_personality_system.TestPersonalitySystem.test_minimal_personality)
Test minimal personality style ... ok
test_multiline_response_handling (unit.test_personality_system.TestPersonalitySystem.test_multiline_response_handling)
Test handling of multiline responses ... ok
test_personality_description_completeness (unit.test_personality_system.TestPersonalitySystem.test_personality_description_completeness)
Test that all personalities have descriptions ... ok
test_personality_for_errors (unit.test_personality_system.TestPersonalitySystem.test_personality_for_errors)
Test personality adaptation for error messages ... ok
test_personality_style_enum (unit.test_personality_system.TestPersonalitySystem.test_personality_style_enum)
Test PersonalityStyle enum values ... ok
test_response_adaptation_with_override (unit.test_personality_system.TestPersonalitySystem.test_response_adaptation_with_override)
Test that style parameter overrides current style ... ok
test_set_style (unit.test_personality_system.TestPersonalitySystem.test_set_style)
Test setting personality style ... ok
test_special_characters_in_query (unit.test_personality_system.TestPersonalitySystem.test_special_characters_in_query)
Test queries with special characters ... ok
test_special_characters_in_response (unit.test_personality_system.TestPersonalitySystem.test_special_characters_in_response)
Test responses with special characters ... ok
test_style_consistency_across_sessions (unit.test_personality_system.TestPersonalitySystem.test_style_consistency_across_sessions)
Test that style preferences are maintained consistently ... ok
test_symbiotic_personality (unit.test_personality_system.TestPersonalitySystem.test_symbiotic_personality)
Test symbiotic personality style ... ok
test_technical_personality (unit.test_personality_system.TestPersonalitySystem.test_technical_personality)
Test technical personality style ... ok
test_very_long_query_handling (unit.test_personality_system.TestPersonalitySystem.test_very_long_query_handling)
Test adaptation with very long query ... ok
test_adaptive_edge_detection (unit.test_personality_system_enhanced.TestPersonalitySystemEnhanced.test_adaptive_edge_detection)
Test edge cases in adaptive detection ... FAIL
test_adaptive_style (unit.test_personality_system_enhanced.TestPersonalitySystemEnhanced.test_adaptive_style)
Test adaptive personality style - auto-detection ... ok
test_consistency_across_styles (unit.test_personality_system_enhanced.TestPersonalitySystemEnhanced.test_consistency_across_styles)
Test that base content is preserved across all styles ... ok
test_edge_cases (unit.test_personality_system_enhanced.TestPersonalitySystemEnhanced.test_edge_cases)
Test edge cases and boundary conditions ... FAIL
test_encouraging_style (unit.test_personality_system_enhanced.TestPersonalitySystemEnhanced.test_encouraging_style)
Test encouraging personality style ... ok
test_friendly_style (unit.test_personality_system_enhanced.TestPersonalitySystemEnhanced.test_friendly_style)
Test friendly personality style ... ok
test_initialization (unit.test_personality_system_enhanced.TestPersonalitySystemEnhanced.test_initialization)
Test default initialization ... ok
test_minimal_style (unit.test_personality_system_enhanced.TestPersonalitySystemEnhanced.test_minimal_style)
Test minimal personality style - just facts ... ok
test_response_length_preservation (unit.test_personality_system_enhanced.TestPersonalitySystemEnhanced.test_response_length_preservation)
Test that responses don't become too long ... ok
test_set_style (unit.test_personality_system_enhanced.TestPersonalitySystemEnhanced.test_set_style)
Test setting personality style ... ok
test_special_characters_in_query (unit.test_personality_system_enhanced.TestPersonalitySystemEnhanced.test_special_characters_in_query)
Test handling special characters in queries ... ok
test_style_descriptions (unit.test_personality_system_enhanced.TestPersonalitySystemEnhanced.test_style_descriptions)
Test getting style descriptions ... ok
test_style_specific_keywords (unit.test_personality_system_enhanced.TestPersonalitySystemEnhanced.test_style_specific_keywords)
Test that certain keywords trigger appropriate technical notes ... ok
test_symbiotic_style (unit.test_personality_system_enhanced.TestPersonalitySystemEnhanced.test_symbiotic_style)
Test symbiotic personality style - learning together ... ok
test_technical_style (unit.test_personality_system_enhanced.TestPersonalitySystemEnhanced.test_technical_style)
Test technical personality style ... ok
test_unicode_handling (unit.test_personality_system_enhanced.TestPersonalitySystemEnhanced.test_unicode_handling)
Test handling of unicode in queries and responses ... ok
test_update_user_preference (unit.test_personality_system_enhanced.TestPersonalitySystemEnhanced.test_update_user_preference)
Test updating existing user preference ... ok
test_user_preferences (unit.test_personality_system_enhanced.TestPersonalitySystemEnhanced.test_user_preferences)
Test learning and retrieving user preferences ... ok
unit.test_tui_app (unittest.loader._FailedTest.unit.test_tui_app) ... ERROR

======================================================================
ERROR: test_tui (unittest.loader._FailedTest.test_tui)
----------------------------------------------------------------------
ImportError: Failed to import test module: test_tui
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/loader.py", line 396, in _find_test_path
    module = self._get_module_from_name(name)
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/loader.py", line 339, in _get_module_from_name
    __import__(name)
    ~~~~~~~~~~^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/test_tui.py", line 7, in <module>
    import pytest
ModuleNotFoundError: No module named 'pytest'


======================================================================
ERROR: unit.test_backend_comprehensive (unittest.loader._FailedTest.unit.test_backend_comprehensive)
----------------------------------------------------------------------
ImportError: Failed to import test module: unit.test_backend_comprehensive
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/loader.py", line 396, in _find_test_path
    module = self._get_module_from_name(name)
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/loader.py", line 339, in _get_module_from_name
    __import__(name)
    ~~~~~~~~~~^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_backend_comprehensive.py", line 9, in <module>
    import pytest
ModuleNotFoundError: No module named 'pytest'


======================================================================
ERROR: unit.test_cli_adapter (unittest.loader._FailedTest.unit.test_cli_adapter)
----------------------------------------------------------------------
ImportError: Failed to import test module: unit.test_cli_adapter
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/loader.py", line 396, in _find_test_path
    module = self._get_module_from_name(name)
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/loader.py", line 339, in _get_module_from_name
    __import__(name)
    ~~~~~~~~~~^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_cli_adapter.py", line 20, in <module>
    from nix_for_humanity.adapters.cli_adapter import CLIAdapter
ModuleNotFoundError: No module named 'nix_for_humanity'


======================================================================
ERROR: test_build_response_text_install (unit.test_core_engine.TestNixForHumanityCore.test_build_response_text_install)
Test response text building for install intent
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_core_engine.py", line 248, in test_build_response_text_install
    text = self.core._build_response_text(intent, solution, 'install firefox')
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/engine.py", line 202, in _build_response_text
    if intent.type.value == 'install' and intent.target:
                                          ^^^^^^^^^^^^^
AttributeError: 'Intent' object has no attribute 'target'

======================================================================
ERROR: test_build_response_text_search (unit.test_core_engine.TestNixForHumanityCore.test_build_response_text_search)
Test response text building for search intent
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 1426, in patched
    return func(*newargs, **newkeywargs)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_core_engine.py", line 266, in test_build_response_text_search
    text = self.core._build_response_text(intent, solution, 'search python')
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/engine.py", line 213, in _build_response_text
    elif intent.type.value == 'search' and intent.target:
                                           ^^^^^^^^^^^^^
AttributeError: 'Intent' object has no attribute 'target'

======================================================================
ERROR: test_execute_plan_failure (unit.test_core_engine.TestNixForHumanityCore.test_execute_plan_failure)
Test failed plan execution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 1426, in patched
    return func(*newargs, **newkeywargs)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_core_engine.py", line 179, in test_execute_plan_failure
    result = self.core.execute_plan(plan, user_id='test_user')
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/engine.py", line 134, in execute_plan
    query=plan.intent.metadata.get('original_input', ''),
          ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Intent' object has no attribute 'metadata'

======================================================================
ERROR: test_execute_plan_success (unit.test_core_engine.TestNixForHumanityCore.test_execute_plan_success)
Test successful plan execution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 1426, in patched
    return func(*newargs, **newkeywargs)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_core_engine.py", line 152, in test_execute_plan_success
    result = self.core.execute_plan(plan, user_id='test_user')
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/engine.py", line 134, in execute_plan
    query=plan.intent.metadata.get('original_input', ''),
          ^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Intent' object has no attribute 'metadata'

======================================================================
ERROR: test_plan_help_query (unit.test_core_engine.TestNixForHumanityCore.test_plan_help_query)
Test planning for a help query
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_core_engine.py", line 105, in test_plan_help_query
    plan = self.core.plan(query)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/engine.py", line 51, in plan
    intent = self.intent_engine.recognize(query.text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_plan_install_query (unit.test_core_engine.TestNixForHumanityCore.test_plan_install_query)
Test planning for an install query
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_core_engine.py", line 62, in test_plan_install_query
    plan = self.core.plan(query)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/engine.py", line 51, in plan
    intent = self.intent_engine.recognize(query.text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_plan_remove_query (unit.test_core_engine.TestNixForHumanityCore.test_plan_remove_query)
Test planning for a remove query
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_core_engine.py", line 80, in test_plan_remove_query
    plan = self.core.plan(query)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/engine.py", line 51, in plan
    intent = self.intent_engine.recognize(query.text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_plan_update_query (unit.test_core_engine.TestNixForHumanityCore.test_plan_update_query)
Test planning for an update query
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_core_engine.py", line 93, in test_plan_update_query
    plan = self.core.plan(query)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/engine.py", line 51, in plan
    intent = self.intent_engine.recognize(query.text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_plan_with_personality (unit.test_core_engine.TestNixForHumanityCore.test_plan_with_personality)
Test that personality affects the response
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_core_engine.py", line 123, in test_plan_with_personality
    plan_friendly = self.core.plan(query_friendly)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/engine.py", line 51, in plan
    intent = self.intent_engine.recognize(query.text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_process_dry_run (unit.test_core_engine.TestNixForHumanityCore.test_process_dry_run)
Test process in dry run mode
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_core_engine.py", line 234, in test_process_dry_run
    response = self.core.process(query)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/engine.py", line 154, in process
    plan = self.plan(query)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/engine.py", line 51, in plan
    intent = self.intent_engine.recognize(query.text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_process_full_pipeline (unit.test_core_engine.TestNixForHumanityCore.test_process_full_pipeline)
Test the full process pipeline
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 1426, in patched
    return func(*newargs, **newkeywargs)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_core_engine.py", line 219, in test_process_full_pipeline
    response = self.core.process(query)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/engine.py", line 154, in process
    plan = self.plan(query)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/engine.py", line 51, in plan
    intent = self.intent_engine.recognize(query.text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_unknown_query_handling (unit.test_core_engine.TestNixForHumanityCore.test_unknown_query_handling)
Test handling of queries with unknown intent
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_core_engine.py", line 314, in test_unknown_query_handling
    plan = self.core.plan(query)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/engine.py", line 51, in plan
    intent = self.intent_engine.recognize(query.text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: unit.test_core_types (unittest.loader._FailedTest.unit.test_core_types)
----------------------------------------------------------------------
ImportError: Failed to import test module: unit.test_core_types
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/loader.py", line 396, in _find_test_path
    module = self._get_module_from_name(name)
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/loader.py", line 339, in _get_module_from_name
    __import__(name)
    ~~~~~~~~~~^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_core_types.py", line 5, in <module>
    import pytest
ModuleNotFoundError: No module named 'pytest'


======================================================================
ERROR: unit.test_engine_enhanced (unittest.loader._FailedTest.unit.test_engine_enhanced)
----------------------------------------------------------------------
ImportError: Failed to import test module: unit.test_engine_enhanced
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/loader.py", line 396, in _find_test_path
    module = self._get_module_from_name(name)
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/loader.py", line 339, in _get_module_from_name
    __import__(name)
    ~~~~~~~~~~^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_engine_enhanced.py", line 18, in <module>
    from nix_for_humanity.core.interface import (
        Query, Response, Intent, IntentType, Command, ExecutionMode, Plan, ExecutionResult
    )
ImportError: cannot import name 'Plan' from 'nix_for_humanity.core.interface' (/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/interface.py)


======================================================================
ERROR: test_build_command_install (unit.test_execution_engine.TestExecutionEngine.test_build_command_install)
Test building install command
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine.py", line 28, in test_build_command_install
    cmd = self.engine.build_command('install', 'firefox')
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 27, in build_command
    'install': Command(
               ~~~~~~~^
        program='nix',
        ^^^^^^^^^^^^^^
    ...<3 lines>...
        description=f"Install {target}"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_build_command_remove (unit.test_execution_engine.TestExecutionEngine.test_build_command_remove)
Test building remove command
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine.py", line 39, in test_build_command_remove
    cmd = self.engine.build_command('remove', 'firefox')
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 27, in build_command
    'install': Command(
               ~~~~~~~^
        program='nix',
        ^^^^^^^^^^^^^^
    ...<3 lines>...
        description=f"Install {target}"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_build_command_unknown (unit.test_execution_engine.TestExecutionEngine.test_build_command_unknown)
Test handling unknown command
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine.py", line 59, in test_build_command_unknown
    cmd = self.engine.build_command('unknown_action')
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 27, in build_command
    'install': Command(
               ~~~~~~~^
        program='nix',
        ^^^^^^^^^^^^^^
    ...<3 lines>...
        description=f"Install {target}"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_build_command_update (unit.test_execution_engine.TestExecutionEngine.test_build_command_update)
Test building update command
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine.py", line 49, in test_build_command_update
    cmd = self.engine.build_command('update')
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 27, in build_command
    'install': Command(
               ~~~~~~~^
        program='nix',
        ^^^^^^^^^^^^^^
    ...<3 lines>...
        description=f"Install {target}"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_execute_dry_run (unit.test_execution_engine.TestExecutionEngine.test_execute_dry_run)
Test dry run execution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 1426, in patched
    return func(*newargs, **newkeywargs)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine.py", line 127, in test_execute_dry_run
    cmd = Command(
        program='nix',
    ...<3 lines>...
        description='Install firefox'
    )
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_execute_explain_mode (unit.test_execution_engine.TestExecutionEngine.test_execute_explain_mode)
Test explain mode doesn't execute
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine.py", line 179, in test_execute_explain_mode
    cmd = Command(
        program='nix',
    ...<3 lines>...
        description='Install firefox'
    )
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_execute_safe_search (unit.test_execution_engine.TestExecutionEngine.test_execute_safe_search)
Test safe search execution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 1426, in patched
    return func(*newargs, **newkeywargs)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine.py", line 238, in test_execute_safe_search
    success, results, error = self.engine.execute_safe_search('firefox')
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 179, in execute_safe_search
    cmd = Command(
        program='nix',
    ...<3 lines>...
        description=f"Search for {search_term}"
    )
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_execute_timeout (unit.test_execution_engine.TestExecutionEngine.test_execute_timeout)
Test handling of command timeout
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 1426, in patched
    return func(*newargs, **newkeywargs)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine.py", line 198, in test_execute_timeout
    cmd = Command(
        program='nix',
    ...<3 lines>...
        description='Search'
    )
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_execute_with_sudo (unit.test_execution_engine.TestExecutionEngine.test_execute_with_sudo)
Test execution of commands requiring sudo
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 1426, in patched
    return func(*newargs, **newkeywargs)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine.py", line 155, in test_execute_with_sudo
    cmd = Command(
        program='nixos-rebuild',
    ...<3 lines>...
        description='Update system'
    )
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_explain_command (unit.test_execution_engine.TestExecutionEngine.test_explain_command)
Test command explanation
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine.py", line 272, in test_explain_command
    explanation = self.engine._explain_command(cmd)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 244, in _explain_command
    cmd_prefix = f"{command.program} {' '.join(command.args[:2])}"
                    ^^^^^^^^^^^^^^^
AttributeError: 'Command' object has no attribute 'program'

======================================================================
ERROR: test_validate_command_dangerous_patterns (unit.test_execution_engine.TestExecutionEngine.test_validate_command_dangerous_patterns)
Test detection of dangerous patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine.py", line 103, in test_validate_command_dangerous_patterns
    valid, error = self.engine.validate_command(cmd)
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 82, in validate_command
    if not command.safe:
           ^^^^^^^^^^^^
AttributeError: 'Command' object has no attribute 'safe'

======================================================================
ERROR: test_validate_command_not_exists (unit.test_execution_engine.TestExecutionEngine.test_validate_command_not_exists)
Test validation when command doesn't exist
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine.py", line 110, in test_validate_command_not_exists
    cmd = Command(
        program='nonexistent_command',
    ...<3 lines>...
        description='Test'
    )
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_validate_command_safe (unit.test_execution_engine.TestExecutionEngine.test_validate_command_safe)
Test validation of safe commands
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine.py", line 64, in test_validate_command_safe
    cmd = Command(
        program='nix',
    ...<3 lines>...
        description='Test'
    )
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_validate_command_unsafe (unit.test_execution_engine.TestExecutionEngine.test_validate_command_unsafe)
Test validation rejects unsafe commands
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine.py", line 80, in test_validate_command_unsafe
    cmd = Command(
        program='rm',
    ...<3 lines>...
        description='Dangerous!'
    )
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_build_command_install (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_build_command_install)
Test building install command
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 42, in test_build_command_install
    cmd = self.engine.build_command('install', 'firefox')
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 27, in build_command
    'install': Command(
               ~~~~~~~^
        program='nix',
        ^^^^^^^^^^^^^^
    ...<3 lines>...
        description=f"Install {target}"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_build_command_list (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_build_command_list)
Test building list command
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 93, in test_build_command_list
    cmd = self.engine.build_command('list')
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 27, in build_command
    'install': Command(
               ~~~~~~~^
        program='nix',
        ^^^^^^^^^^^^^^
    ...<3 lines>...
        description=f"Install {target}"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_build_command_remove (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_build_command_remove)
Test building remove command
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 53, in test_build_command_remove
    cmd = self.engine.build_command('remove', 'firefox')
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 27, in build_command
    'install': Command(
               ~~~~~~~^
        program='nix',
        ^^^^^^^^^^^^^^
    ...<3 lines>...
        description=f"Install {target}"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_build_command_rollback (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_build_command_rollback)
Test building rollback command
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 83, in test_build_command_rollback
    cmd = self.engine.build_command('rollback')
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 27, in build_command
    'install': Command(
               ~~~~~~~^
        program='nix',
        ^^^^^^^^^^^^^^
    ...<3 lines>...
        description=f"Install {target}"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_build_command_search (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_build_command_search)
Test building search command
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 73, in test_build_command_search
    cmd = self.engine.build_command('search', 'python')
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 27, in build_command
    'install': Command(
               ~~~~~~~^
        program='nix',
        ^^^^^^^^^^^^^^
    ...<3 lines>...
        description=f"Install {target}"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_build_command_unknown (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_build_command_unknown)
Test building unknown command returns None
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 103, in test_build_command_unknown
    cmd = self.engine.build_command('unknown_action')
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 27, in build_command
    'install': Command(
               ~~~~~~~^
        program='nix',
        ^^^^^^^^^^^^^^
    ...<3 lines>...
        description=f"Install {target}"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_build_command_update (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_build_command_update)
Test building update command
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 63, in test_build_command_update
    cmd = self.engine.build_command('update')
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 27, in build_command
    'install': Command(
               ~~~~~~~^
        program='nix',
        ^^^^^^^^^^^^^^
    ...<3 lines>...
        description=f"Install {target}"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_command_building_edge_cases (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_command_building_edge_cases)
Test command building with None or empty targets
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 474, in test_command_building_edge_cases
    cmd = self.engine.build_command('remove', None)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 27, in build_command
    'install': Command(
               ~~~~~~~^
        program='nix',
        ^^^^^^^^^^^^^^
    ...<3 lines>...
        description=f"Install {target}"
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_dry_run_flag_addition (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_dry_run_flag_addition)
Test that dry-run flag is added correctly for nix commands
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 423, in test_dry_run_flag_addition
    self.engine.execute(cmd, ExecutionMode.DRY_RUN)
    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 114, in execute
    valid, error = self.validate_command(command)
                   ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 82, in validate_command
    if not command.safe:
           ^^^^^^^^^^^^
AttributeError: 'Command' object has no attribute 'safe'

======================================================================
ERROR: test_execute_dry_run_mode (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_dry_run_mode)
Test execution in dry run mode
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 1426, in patched
    return func(*newargs, **newkeywargs)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 193, in test_execute_dry_run_mode
    result = self.engine.execute(cmd, ExecutionMode.DRY_RUN)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 114, in execute
    valid, error = self.validate_command(command)
                   ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 82, in validate_command
    if not command.safe:
           ^^^^^^^^^^^^
AttributeError: 'Command' object has no attribute 'safe'

======================================================================
ERROR: test_execute_explain_mode (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_explain_mode)
Test execution in explain mode
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 206, in test_execute_explain_mode
    result = self.engine.execute(cmd, ExecutionMode.EXPLAIN)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 114, in execute
    valid, error = self.validate_command(command)
                   ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 82, in validate_command
    if not command.safe:
           ^^^^^^^^^^^^
AttributeError: 'Command' object has no attribute 'safe'

======================================================================
ERROR: test_execute_general_exception (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_general_exception)
Test general exception handling
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 1426, in patched
    return func(*newargs, **newkeywargs)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 271, in test_execute_general_exception
    result = self.engine.execute(cmd, ExecutionMode.EXECUTE)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 114, in execute
    valid, error = self.validate_command(command)
                   ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 82, in validate_command
    if not command.safe:
           ^^^^^^^^^^^^
AttributeError: 'Command' object has no attribute 'safe'

======================================================================
ERROR: test_execute_normal_mode (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_normal_mode)
Test normal execution mode
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 1426, in patched
    return func(*newargs, **newkeywargs)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 226, in test_execute_normal_mode
    result = self.engine.execute(cmd, ExecutionMode.EXECUTE)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 114, in execute
    valid, error = self.validate_command(command)
                   ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 82, in validate_command
    if not command.safe:
           ^^^^^^^^^^^^
AttributeError: 'Command' object has no attribute 'safe'

======================================================================
ERROR: test_execute_safe_search_command_failure (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_safe_search_command_failure)
Test safe search when command fails
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 1426, in patched
    return func(*newargs, **newkeywargs)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 329, in test_execute_safe_search_command_failure
    success, results, error = self.engine.execute_safe_search("test")
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 179, in execute_safe_search
    cmd = Command(
        program='nix',
    ...<3 lines>...
        description=f"Search for {search_term}"
    )
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_execute_safe_search_invalid_json (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_safe_search_invalid_json)
Test safe search with invalid JSON response
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 1426, in patched
    return func(*newargs, **newkeywargs)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 314, in test_execute_safe_search_invalid_json
    success, results, error = self.engine.execute_safe_search("test")
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 179, in execute_safe_search
    cmd = Command(
        program='nix',
    ...<3 lines>...
        description=f"Search for {search_term}"
    )
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_execute_safe_search_result_limit (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_safe_search_result_limit)
Test safe search limits results to 10
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 1426, in patched
    return func(*newargs, **newkeywargs)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 352, in test_execute_safe_search_result_limit
    success, results, error = self.engine.execute_safe_search("package")
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 179, in execute_safe_search
    cmd = Command(
        program='nix',
    ...<3 lines>...
        description=f"Search for {search_term}"
    )
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_execute_safe_search_success (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_safe_search_success)
Test safe search execution with valid results
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 1426, in patched
    return func(*newargs, **newkeywargs)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 297, in test_execute_safe_search_success
    success, results, error = self.engine.execute_safe_search("firefox")
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 179, in execute_safe_search
    cmd = Command(
        program='nix',
    ...<3 lines>...
        description=f"Search for {search_term}"
    )
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_execute_timeout (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_timeout)
Test command timeout handling
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 1426, in patched
    return func(*newargs, **newkeywargs)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 258, in test_execute_timeout
    result = self.engine.execute(cmd, ExecutionMode.EXECUTE)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 114, in execute
    valid, error = self.validate_command(command)
                   ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 82, in validate_command
    if not command.safe:
           ^^^^^^^^^^^^
AttributeError: 'Command' object has no attribute 'safe'

======================================================================
ERROR: test_execute_with_custom_timeout (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_with_custom_timeout)
Test execution respects custom timeout
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 451, in test_execute_with_custom_timeout
    result = self.engine.execute(cmd, ExecutionMode.EXECUTE)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 114, in execute
    valid, error = self.validate_command(command)
                   ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 82, in validate_command
    if not command.safe:
           ^^^^^^^^^^^^
AttributeError: 'Command' object has no attribute 'safe'

======================================================================
ERROR: test_execute_with_sudo (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_execute_with_sudo)
Test execution with sudo requirement
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 1426, in patched
    return func(*newargs, **newkeywargs)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 244, in test_execute_with_sudo
    result = self.engine.execute(cmd, ExecutionMode.EXECUTE)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 114, in execute
    valid, error = self.validate_command(command)
                   ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 82, in validate_command
    if not command.safe:
           ^^^^^^^^^^^^
AttributeError: 'Command' object has no attribute 'safe'

======================================================================
ERROR: test_explain_command_coverage (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_explain_command_coverage)
Test command explanation for all command types
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 413, in test_explain_command_coverage
    explanation = self.engine._explain_command(cmd)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 244, in _explain_command
    cmd_prefix = f"{command.program} {' '.join(command.args[:2])}"
                    ^^^^^^^^^^^^^^^
AttributeError: 'Command' object has no attribute 'program'

======================================================================
ERROR: test_validate_command_dangerous_patterns (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_validate_command_dangerous_patterns)
Test validation detects dangerous patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 148, in test_validate_command_dangerous_patterns
    valid, error = self.engine.validate_command(cmd)
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 82, in validate_command
    if not command.safe:
           ^^^^^^^^^^^^
AttributeError: 'Command' object has no attribute 'safe'

======================================================================
ERROR: test_validate_command_not_found (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_validate_command_not_found)
Test validation when command doesn't exist
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 169, in test_validate_command_not_found
    cmd = Command(
        program='nonexistent',
    ...<3 lines>...
        description="Test"
    )
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_validate_command_pipe_injection (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_validate_command_pipe_injection)
Test validation prevents pipe injection
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 154, in test_validate_command_pipe_injection
    cmd = Command(
        program='nix',
    ...<3 lines>...
        description="Test"
    )
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_validate_command_safe (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_validate_command_safe)
Test validation of safe commands
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 108, in test_validate_command_safe
    cmd = Command(
        program='nix',
    ...<3 lines>...
        description="Test command"
    )
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_validate_command_unsafe (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_validate_command_unsafe)
Test validation rejects unsafe commands
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 123, in test_validate_command_unsafe
    cmd = Command(
        program='rm',
    ...<3 lines>...
        description="Dangerous command"
    )
TypeError: Command.__init__() got an unexpected keyword argument 'program'

======================================================================
ERROR: test_validation_with_empty_args (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_validation_with_empty_args)
Test validation handles commands with empty args
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 440, in test_validation_with_empty_args
    valid, error = self.engine.validate_command(cmd)
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/execution_engine.py", line 82, in validate_command
    if not command.safe:
           ^^^^^^^^^^^^
AttributeError: 'Command' object has no attribute 'safe'

======================================================================
ERROR: test_init_python_api_success (unit.test_executor.TestSafeExecutor.test_init_python_api_success)
Test successful Python API initialization
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 1423, in patched
    with self.decoration_helper(patched,
         ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
                                args,
                                ^^^^^
                                keywargs) as (newargs, newkeywargs):
                                ^^^^^^^^^
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/contextlib.py", line 141, in __enter__
    return next(self.gen)
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 1405, in decoration_helper
    arg = exit_stack.enter_context(patching)
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/contextlib.py", line 530, in enter_context
    result = _enter(cm)
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 1497, in __enter__
    original, local = self.get_original()
                      ~~~~~~~~~~~~~~~~~^^
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 1467, in get_original
    raise AttributeError(
        "%s does not have the attribute %r" % (target, name)
    )
AttributeError: <module 'backend.core.executor' from '/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/backend/core/executor.py'> does not have the attribute 'models'

======================================================================
ERROR: unit.test_executor_comprehensive (unittest.loader._FailedTest.unit.test_executor_comprehensive)
----------------------------------------------------------------------
ImportError: Failed to import test module: unit.test_executor_comprehensive
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/loader.py", line 396, in _find_test_path
    module = self._get_module_from_name(name)
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/loader.py", line 339, in _get_module_from_name
    __import__(name)
    ~~~~~~~~~~^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_executor_comprehensive.py", line 8, in <module>
    import pytest
ModuleNotFoundError: No module named 'pytest'


======================================================================
ERROR: test_async_recognize_coroutine (unit.test_intent.TestAsyncIntentRecognition.test_async_recognize_coroutine)
Test that async recognize returns a coroutine
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent.py", line 356, in test_async_recognize_coroutine
    result = self.recognizer.recognize("test", {})
TypeError: IntentRecognizer.recognize() takes 2 positional arguments but 3 were given

======================================================================
ERROR: test_async_sync_consistency (unit.test_intent.TestAsyncIntentRecognition.test_async_sync_consistency)
Test that async and sync recognize give same results
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent.py", line 372, in test_async_sync_consistency
    async_intent = asyncio.run(get_async_intent())
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/asyncio/runners.py", line 195, in run
    return runner.run(main)
           ~~~~~~~~~~^^^^^^
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/asyncio/base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent.py", line 370, in get_async_intent
    return await self.recognizer.recognize(test_text, {})
                 ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
TypeError: IntentRecognizer.recognize() takes 2 positional arguments but 3 were given

======================================================================
ERROR: test_configure_intent_recognition (unit.test_intent.TestIntentRecognizer.test_configure_intent_recognition) (text='set up docker')
Test recognition of configure intents
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent.py", line 202, in test_configure_intent_recognition
    intent = self.recognizer.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/backend/core/intent.py", line 298, in recognize
    if intent := self._match_patterns(normalized):
                 ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/backend/core/intent.py", line 176, in _match_patterns
    package = match.group(2) if match.group(1) in ['install', 'add', 'get'] else match.group(3)
                                                                                 ~~~~~~~~~~~^^^
IndexError: no such group

======================================================================
ERROR: test_configure_intent_recognition (unit.test_intent.TestIntentRecognizer.test_configure_intent_recognition) (text='help me set up vpn')
Test recognition of configure intents
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent.py", line 202, in test_configure_intent_recognition
    intent = self.recognizer.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/backend/core/intent.py", line 298, in recognize
    if intent := self._match_patterns(normalized):
                 ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/backend/core/intent.py", line 176, in _match_patterns
    package = match.group(2) if match.group(1) in ['install', 'add', 'get'] else match.group(3)
                                                                                 ~~~~~~~~~~~^^^
IndexError: no such group

======================================================================
ERROR: test_extra_words_handling (unit.test_intent.TestIntentRecognizer.test_extra_words_handling) (text='I really need to install vim right now')
Test handling of extra words in commands
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent.py", line 267, in test_extra_words_handling
    intent = self.recognizer.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/backend/core/intent.py", line 298, in recognize
    if intent := self._match_patterns(normalized):
                 ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/backend/core/intent.py", line 176, in _match_patterns
    package = match.group(2) if match.group(1) in ['install', 'add', 'get'] else match.group(3)
                                                                                 ~~~~~~~~~~~^^^
IndexError: no such group

======================================================================
ERROR: test_install_intent_recognition (unit.test_intent.TestIntentRecognizer.test_install_intent_recognition) (text='I need python')
Test recognition of install intents
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent.py", line 108, in test_install_intent_recognition
    intent = self.recognizer.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/backend/core/intent.py", line 298, in recognize
    if intent := self._match_patterns(normalized):
                 ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/backend/core/intent.py", line 176, in _match_patterns
    package = match.group(2) if match.group(1) in ['install', 'add', 'get'] else match.group(3)
                                                                                 ~~~~~~~~~~~^^^
IndexError: no such group

======================================================================
ERROR: test_install_intent_recognition (unit.test_intent.TestIntentRecognizer.test_install_intent_recognition) (text='I want vim')
Test recognition of install intents
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent.py", line 108, in test_install_intent_recognition
    intent = self.recognizer.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/backend/core/intent.py", line 298, in recognize
    if intent := self._match_patterns(normalized):
                 ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/backend/core/intent.py", line 176, in _match_patterns
    package = match.group(2) if match.group(1) in ['install', 'add', 'get'] else match.group(3)
                                                                                 ~~~~~~~~~~~^^^
IndexError: no such group

======================================================================
ERROR: test_install_intent_recognition (unit.test_intent.TestIntentRecognizer.test_install_intent_recognition) (text='set up zsh')
Test recognition of install intents
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent.py", line 108, in test_install_intent_recognition
    intent = self.recognizer.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/backend/core/intent.py", line 298, in recognize
    if intent := self._match_patterns(normalized):
                 ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/backend/core/intent.py", line 176, in _match_patterns
    package = match.group(2) if match.group(1) in ['install', 'add', 'get'] else match.group(3)
                                                                                 ~~~~~~~~~~~^^^
IndexError: no such group

======================================================================
ERROR: unit.test_intent_comprehensive (unittest.loader._FailedTest.unit.test_intent_comprehensive)
----------------------------------------------------------------------
ImportError: Failed to import test module: unit.test_intent_comprehensive
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/loader.py", line 396, in _find_test_path
    module = self._get_module_from_name(name)
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/loader.py", line 339, in _get_module_from_name
    __import__(name)
    ~~~~~~~~~~^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_comprehensive.py", line 23, in <module>
    from core.intent import IntentRecognizer, Intent, IntentType
ModuleNotFoundError: No module named 'core.intent'


======================================================================
ERROR: test_case_insensitivity (unit.test_intent_engine.TestIntentEngine.test_case_insensitivity)
Test that recognition is case insensitive
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 186, in test_case_insensitivity
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_info_patterns_extended (unit.test_intent_engine.TestIntentEngine.test_info_patterns_extended) (text='show installed')
Test extended info patterns including new additions
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 298, in test_info_patterns_extended
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_info_patterns_extended (unit.test_intent_engine.TestIntentEngine.test_info_patterns_extended) (text='show me installed')
Test extended info patterns including new additions
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 298, in test_info_patterns_extended
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_info_patterns_extended (unit.test_intent_engine.TestIntentEngine.test_info_patterns_extended) (text='what is installed')
Test extended info patterns including new additions
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 298, in test_info_patterns_extended
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_info_patterns_extended (unit.test_intent_engine.TestIntentEngine.test_info_patterns_extended) (text='list packages')
Test extended info patterns including new additions
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 298, in test_info_patterns_extended
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_info_patterns_extended (unit.test_intent_engine.TestIntentEngine.test_info_patterns_extended) (text='system info')
Test extended info patterns including new additions
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 298, in test_info_patterns_extended
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_metadata_preservation (unit.test_intent_engine.TestIntentEngine.test_metadata_preservation)
Test that original input is preserved in metadata
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 233, in test_metadata_preservation
    intent = self.engine.recognize(test_input)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='install browser')
Test package alias resolution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 174, in test_package_aliases
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='get web browser')
Test package alias resolution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 174, in test_package_aliases
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='add chrome')
Test package alias resolution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 174, in test_package_aliases
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='install vscode')
Test package alias resolution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 174, in test_package_aliases
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='get code')
Test package alias resolution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 174, in test_package_aliases
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='install vim')
Test package alias resolution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 174, in test_package_aliases
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='add vi')
Test package alias resolution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 174, in test_package_aliases
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='get editor')
Test package alias resolution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 174, in test_package_aliases
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='install text editor')
Test package alias resolution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 174, in test_package_aliases
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='add python')
Test package alias resolution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 174, in test_package_aliases
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='get node')
Test package alias resolution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 174, in test_package_aliases
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_aliases (unit.test_intent_engine.TestIntentEngine.test_package_aliases) (text='install docker')
Test package alias resolution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 174, in test_package_aliases
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_update_patterns (unit.test_intent_engine.TestIntentEngine.test_package_update_patterns) (text='update firefox')
Test that package update patterns work correctly
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 251, in test_package_update_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_update_patterns (unit.test_intent_engine.TestIntentEngine.test_package_update_patterns) (text='upgrade vim')
Test that package update patterns work correctly
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 251, in test_package_update_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_update_patterns (unit.test_intent_engine.TestIntentEngine.test_package_update_patterns) (text='update python3')
Test that package update patterns work correctly
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 251, in test_package_update_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_update_patterns (unit.test_intent_engine.TestIntentEngine.test_package_update_patterns) (text='upgrade nodejs')
Test that package update patterns work correctly
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 251, in test_package_update_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_help_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_help_patterns) (text='help')
Test recognition of help intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 136, in test_recognize_help_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_help_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_help_patterns) (text='help me')
Test recognition of help intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 136, in test_recognize_help_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_help_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_help_patterns) (text='what can you do')
Test recognition of help intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 136, in test_recognize_help_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_help_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_help_patterns) (text='how do i use this')
Test recognition of help intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 136, in test_recognize_help_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_help_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_help_patterns) (text='how do i install')
Test recognition of help intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 136, in test_recognize_help_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_info_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_info_patterns) (text='list packages')
Test recognition of info intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 121, in test_recognize_info_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_info_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_info_patterns) (text='system info')
Test recognition of info intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 121, in test_recognize_info_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_install_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_install_patterns) (text='install firefox')
Test recognition of install intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 41, in test_recognize_install_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_install_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_install_patterns) (text='add vim')
Test recognition of install intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 41, in test_recognize_install_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_install_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_install_patterns) (text='get python3')
Test recognition of install intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 41, in test_recognize_install_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_install_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_install_patterns) (text='download docker')
Test recognition of install intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 41, in test_recognize_install_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_install_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_install_patterns) (text='i need nodejs')
Test recognition of install intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 41, in test_recognize_install_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_install_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_install_patterns) (text='i want vscode')
Test recognition of install intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 41, in test_recognize_install_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_install_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_install_patterns) (text='need emacs')
Test recognition of install intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 41, in test_recognize_install_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_install_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_install_patterns) (text='want git')
Test recognition of install intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 41, in test_recognize_install_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_install_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_install_patterns) (text='get me htop')
Test recognition of install intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 41, in test_recognize_install_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_install_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_install_patterns) (text='firefox please')
Test recognition of install intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 41, in test_recognize_install_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_remove_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_remove_patterns) (text='remove firefox')
Test recognition of remove intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 57, in test_recognize_remove_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_remove_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_remove_patterns) (text='uninstall vim')
Test recognition of remove intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 57, in test_recognize_remove_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_remove_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_remove_patterns) (text='delete python3')
Test recognition of remove intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 57, in test_recognize_remove_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_remove_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_remove_patterns) (text='firefox is gone')
Test recognition of remove intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 57, in test_recognize_remove_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_rollback_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_rollback_patterns) (text='rollback')
Test recognition of rollback intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 109, in test_recognize_rollback_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_rollback_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_rollback_patterns) (text='revert')
Test recognition of rollback intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 109, in test_recognize_rollback_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_rollback_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_rollback_patterns) (text='undo')
Test recognition of rollback intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 109, in test_recognize_rollback_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_rollback_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_rollback_patterns) (text='go back')
Test recognition of rollback intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 109, in test_recognize_rollback_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_rollback_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_rollback_patterns) (text='previous generation')
Test recognition of rollback intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 109, in test_recognize_rollback_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_search_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_search_patterns) (text='search firefox')
Test recognition of search intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 93, in test_recognize_search_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_search_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_search_patterns) (text='find python')
Test recognition of search intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 93, in test_recognize_search_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_search_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_search_patterns) (text='look for editor')
Test recognition of search intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 93, in test_recognize_search_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_search_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_search_patterns) (text='what is docker')
Test recognition of search intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 93, in test_recognize_search_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_search_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_search_patterns) (text='is there vim')
Test recognition of search intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 93, in test_recognize_search_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_search_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_search_patterns) (text='show me nodejs')
Test recognition of search intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 93, in test_recognize_search_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_unknown_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_unknown_patterns) (text='random gibberish')
Test handling of unknown patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 151, in test_recognize_unknown_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_recognize_unknown_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_unknown_patterns) (text='do something weird')
Test handling of unknown patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 151, in test_recognize_unknown_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_recognize_unknown_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_unknown_patterns) (text='make coffee')
Test handling of unknown patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 151, in test_recognize_unknown_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_recognize_unknown_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_unknown_patterns) (text='compile the kernel')
Test handling of unknown patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 151, in test_recognize_unknown_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_recognize_unknown_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_unknown_patterns) (text='')
Test handling of unknown patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 151, in test_recognize_unknown_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_recognize_update_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_update_patterns) (text='update')
Test recognition of update intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 77, in test_recognize_update_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_update_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_update_patterns) (text='upgrade')
Test recognition of update intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 77, in test_recognize_update_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_update_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_update_patterns) (text='update system')
Test recognition of update intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 77, in test_recognize_update_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_update_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_update_patterns) (text='upgrade everything')
Test recognition of update intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 77, in test_recognize_update_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_update_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_update_patterns) (text='update all')
Test recognition of update intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 77, in test_recognize_update_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_update_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_update_patterns) (text='system update')
Test recognition of update intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 77, in test_recognize_update_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_update_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_update_patterns) (text='system upgrade')
Test recognition of update intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 77, in test_recognize_update_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_update_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_update_patterns) (text='make everything current')
Test recognition of update intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 77, in test_recognize_update_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_recognize_update_patterns (unit.test_intent_engine.TestIntentEngine.test_recognize_update_patterns) (text='update my system')
Test recognition of update intent patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 77, in test_recognize_update_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_system_vs_package_update_distinction (unit.test_intent_engine.TestIntentEngine.test_system_vs_package_update_distinction) (text='update system')
Test that system updates are distinguished from package updates
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 269, in test_system_vs_package_update_distinction
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_system_vs_package_update_distinction (unit.test_intent_engine.TestIntentEngine.test_system_vs_package_update_distinction) (text='upgrade everything')
Test that system updates are distinguished from package updates
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 269, in test_system_vs_package_update_distinction
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_system_vs_package_update_distinction (unit.test_intent_engine.TestIntentEngine.test_system_vs_package_update_distinction) (text='update all')
Test that system updates are distinguished from package updates
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 269, in test_system_vs_package_update_distinction
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_system_vs_package_update_distinction (unit.test_intent_engine.TestIntentEngine.test_system_vs_package_update_distinction) (text='system update')
Test that system updates are distinguished from package updates
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 269, in test_system_vs_package_update_distinction
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_system_vs_package_update_distinction (unit.test_intent_engine.TestIntentEngine.test_system_vs_package_update_distinction) (text='update my system')
Test that system updates are distinguished from package updates
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 269, in test_system_vs_package_update_distinction
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_system_vs_package_update_distinction (unit.test_intent_engine.TestIntentEngine.test_system_vs_package_update_distinction) (text='upgrade the whole system')
Test that system updates are distinguished from package updates
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 269, in test_system_vs_package_update_distinction
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_system_vs_package_update_distinction (unit.test_intent_engine.TestIntentEngine.test_system_vs_package_update_distinction) (text='update firefox')
Test that system updates are distinguished from package updates
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 282, in test_system_vs_package_update_distinction
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_system_vs_package_update_distinction (unit.test_intent_engine.TestIntentEngine.test_system_vs_package_update_distinction) (text='upgrade vim')
Test that system updates are distinguished from package updates
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 282, in test_system_vs_package_update_distinction
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_system_vs_package_update_distinction (unit.test_intent_engine.TestIntentEngine.test_system_vs_package_update_distinction) (text='update python3')
Test that system updates are distinguished from package updates
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine.py", line 282, in test_system_vs_package_update_distinction
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_case_insensitivity (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_case_insensitivity) (input='INSTALL FIREFOX')
Test that recognition is case-insensitive
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 216, in test_case_insensitivity
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_case_insensitivity (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_case_insensitivity) (input='Install Firefox')
Test that recognition is case-insensitive
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 216, in test_case_insensitivity
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_case_insensitivity (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_case_insensitivity) (input='InStAlL fIrEfOx')
Test that recognition is case-insensitive
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 216, in test_case_insensitivity
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_case_insensitivity (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_case_insensitivity) (input='REMOVE vim')
Test that recognition is case-insensitive
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 216, in test_case_insensitivity
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_case_insensitivity (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_case_insensitivity) (input='UPDATE')
Test that recognition is case-insensitive
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 216, in test_case_insensitivity
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_complex_patterns (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_complex_patterns) (input='hey can you install that firefox thing for me')
Test complex real-world patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 319, in test_complex_patterns
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_complex_patterns (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_complex_patterns) (input='i think i need to remove python from my system')
Test complex real-world patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 319, in test_complex_patterns
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_complex_patterns (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_complex_patterns) (input='could you search for text editors')
Test complex real-world patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 319, in test_complex_patterns
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_complex_patterns (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_complex_patterns) (input='please help me update everything')
Test complex real-world patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 319, in test_complex_patterns
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_confidence_scores (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_confidence_scores)
Test confidence scores are appropriate
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 358, in test_confidence_scores
    intent = self.engine.recognize("install firefox")
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_edge_cases (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_edge_cases)
Test edge cases and boundary conditions
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 369, in test_edge_cases
    intent = self.engine.recognize(long_input)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_extra_whitespace_handling (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_extra_whitespace_handling) (input='  install   firefox  ')
Test handling of extra whitespace
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 231, in test_extra_whitespace_handling
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_extra_whitespace_handling (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_extra_whitespace_handling) (input='\tremove\tvim\t')
Test handling of extra whitespace
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 231, in test_extra_whitespace_handling
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_extra_whitespace_handling (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_extra_whitespace_handling) (input='   update   ')
Test handling of extra whitespace
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 231, in test_extra_whitespace_handling
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_help_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_help_intent) (input='help')
Test help intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 185, in test_help_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_help_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_help_intent) (input='help me')
Test help intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 185, in test_help_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_help_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_help_intent) (input='what can you do')
Test help intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 185, in test_help_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_help_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_help_intent) (input='how do i install something')
Test help intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 185, in test_help_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_info_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_info_intent) (input='what is installed')
Test info intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 171, in test_info_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_info_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_info_intent) (input='show me installed')
Test info intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 171, in test_info_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_info_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_info_intent) (input='list packages')
Test info intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 171, in test_info_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_info_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_info_intent) (input='system info')
Test info intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 171, in test_info_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_install_intent_basic (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_basic) (input='install firefox')
Test basic install intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 53, in test_install_intent_basic
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_install_intent_basic (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_basic) (input='add nodejs')
Test basic install intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 53, in test_install_intent_basic
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_install_intent_basic (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_basic) (input='get python')
Test basic install intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 53, in test_install_intent_basic
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_install_intent_basic (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_basic) (input='download docker')
Test basic install intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 53, in test_install_intent_basic
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_install_intent_conversational (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_conversational) (input='i need firefox')
Test conversational install patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 71, in test_install_intent_conversational
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_install_intent_conversational (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_conversational) (input='i want vscode')
Test conversational install patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 71, in test_install_intent_conversational
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_install_intent_conversational (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_conversational) (input='need vim')
Test conversational install patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 71, in test_install_intent_conversational
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_install_intent_conversational (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_conversational) (input='want docker')
Test conversational install patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 71, in test_install_intent_conversational
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_install_intent_conversational (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_conversational) (input='get me python')
Test conversational install patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 71, in test_install_intent_conversational
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_install_intent_conversational (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_conversational) (input='firefox please')
Test conversational install patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 71, in test_install_intent_conversational
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_install_intent_with_aliases (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_with_aliases) (input='install browser')
Test install with package aliases
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 89, in test_install_intent_with_aliases
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_install_intent_with_aliases (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_with_aliases) (input='add web browser')
Test install with package aliases
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 89, in test_install_intent_with_aliases
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_install_intent_with_aliases (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_with_aliases) (input='get code')
Test install with package aliases
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 89, in test_install_intent_with_aliases
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_install_intent_with_aliases (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_with_aliases) (input='install editor')
Test install with package aliases
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 89, in test_install_intent_with_aliases
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_install_intent_with_aliases (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_with_aliases) (input='add text editor')
Test install with package aliases
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 89, in test_install_intent_with_aliases
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_install_intent_with_aliases (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_with_aliases) (input='install node')
Test install with package aliases
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 89, in test_install_intent_with_aliases
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_install_intent_with_aliases (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_install_intent_with_aliases) (input='get vi')
Test install with package aliases
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 89, in test_install_intent_with_aliases
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_metadata_preservation (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_metadata_preservation)
Test that original input is preserved in metadata
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 239, in test_metadata_preservation
    intent = self.engine.recognize(test_input)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_pattern_group_extraction (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_pattern_group_extraction)
Test correct group extraction from patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 344, in test_pattern_group_extraction
    intent = self.engine.recognize("install firefox")
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_pattern_priority (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_pattern_priority)
Test that more specific patterns take priority
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 328, in test_pattern_priority
    intent = self.engine.recognize("get me firefox")
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_remove_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_remove_intent) (input='remove firefox')
Test remove intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 105, in test_remove_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_remove_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_remove_intent) (input='uninstall python')
Test remove intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 105, in test_remove_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_remove_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_remove_intent) (input='delete docker')
Test remove intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 105, in test_remove_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_remove_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_remove_intent) (input='get rid of vim')
Test remove intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 105, in test_remove_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_remove_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_remove_intent) (input='firefox is gone')
Test remove intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 105, in test_remove_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_rollback_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_rollback_intent) (input='rollback')
Test rollback intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 157, in test_rollback_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_rollback_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_rollback_intent) (input='revert')
Test rollback intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 157, in test_rollback_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_rollback_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_rollback_intent) (input='undo')
Test rollback intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 157, in test_rollback_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_rollback_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_rollback_intent) (input='go back')
Test rollback intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 157, in test_rollback_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_rollback_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_rollback_intent) (input='previous generation')
Test rollback intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 157, in test_rollback_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_search_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_search_intent) (input='search firefox')
Test search intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 141, in test_search_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_search_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_search_intent) (input='find python')
Test search intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 141, in test_search_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_search_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_search_intent) (input='look for docker')
Test search intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 141, in test_search_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_search_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_search_intent) (input='what is vim')
Test search intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 141, in test_search_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_search_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_search_intent) (input='is there nodejs')
Test search intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 141, in test_search_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_search_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_search_intent) (input='show me browsers')
Test search intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 141, in test_search_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_unknown_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_unknown_intent) (input='make me a sandwich')
Test unknown intent handling
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 200, in test_unknown_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_unknown_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_unknown_intent) (input="what's the weather")
Test unknown intent handling
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 200, in test_unknown_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_unknown_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_unknown_intent) (input='hello world')
Test unknown intent handling
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 200, in test_unknown_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_unknown_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_unknown_intent) (input='123456')
Test unknown intent handling
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 200, in test_unknown_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_unknown_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_unknown_intent) (input='')
Test unknown intent handling
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 200, in test_unknown_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_update_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_update_intent) (input='update')
Test update intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 124, in test_update_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_update_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_update_intent) (input='upgrade')
Test update intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 124, in test_update_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_update_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_update_intent) (input='update system')
Test update intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 124, in test_update_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_update_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_update_intent) (input='upgrade everything')
Test update intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 124, in test_update_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_update_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_update_intent) (input='update all')
Test update intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 124, in test_update_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_update_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_update_intent) (input='update my system')
Test update intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 124, in test_update_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_update_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_update_intent) (input='system update')
Test update intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 124, in test_update_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_update_intent (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_update_intent) (input='make everything current')
Test update intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 124, in test_update_intent
    intent = self.engine.recognize(input_text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_get_solution_by_intent (unit.test_knowledge_base_enhanced.TestKnowledgeBaseEnhanced.test_get_solution_by_intent)
Test getting solutions by intent type
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_knowledge_base_enhanced.py", line 60, in test_get_solution_by_intent
    self.assertIn("install", solution.lower())
                             ^^^^^^^^^^^^^^
AttributeError: 'dict' object has no attribute 'lower'

======================================================================
ERROR: test_get_solution_with_context (unit.test_knowledge_base_enhanced.TestKnowledgeBaseEnhanced.test_get_solution_with_context)
Test getting solutions with context parameters
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_knowledge_base_enhanced.py", line 120, in test_get_solution_with_context
    solution = self.kb.get_solution(IntentType.INSTALL, {'package': 'firefox'})
TypeError: KnowledgeBase.get_solution() takes 2 positional arguments but 3 were given

======================================================================
ERROR: test_install_methods_structure (unit.test_knowledge_base_enhanced.TestKnowledgeBaseEnhanced.test_install_methods_structure)
Test the structure of install methods
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_knowledge_base_enhanced.py", line 368, in test_install_methods_structure
    methods = self.kb.get_install_methods()
TypeError: KnowledgeBase.get_install_methods() missing 1 required positional argument: 'package'

======================================================================
ERROR: test_database_permissions (unit.test_learning_system_edge_cases.TestLearningSystemEdgeCases.test_database_permissions)
Test database file permissions
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_learning_system_edge_cases.py", line 84, in test_database_permissions
    prefs = ls.get_user_preferences("test")
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/learning_system.py", line 163, in get_user_preferences
    conn = sqlite3.connect(self.db_path)
sqlite3.OperationalError: unable to open database file

======================================================================
ERROR: unit.test_nix_integration (unittest.loader._FailedTest.unit.test_nix_integration)
----------------------------------------------------------------------
ImportError: Failed to import test module: unit.test_nix_integration
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/loader.py", line 396, in _find_test_path
    module = self._get_module_from_name(name)
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/loader.py", line 339, in _get_module_from_name
    __import__(name)
    ~~~~~~~~~~^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nix_integration.py", line 20, in <module>
    from core.nix_integration import (
    ...<4 lines>...
    )
ModuleNotFoundError: No module named 'core.nix_integration'


======================================================================
ERROR: test_ambiguous_inputs (unit.test_nlp_comprehensive.TestNLPComprehensive.test_ambiguous_inputs) (text='install')
Test handling of ambiguous inputs
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 169, in test_ambiguous_inputs
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_ambiguous_inputs (unit.test_nlp_comprehensive.TestNLPComprehensive.test_ambiguous_inputs) (text='remove')
Test handling of ambiguous inputs
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 169, in test_ambiguous_inputs
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_ambiguous_inputs (unit.test_nlp_comprehensive.TestNLPComprehensive.test_ambiguous_inputs) (text='update firefox')
Test handling of ambiguous inputs
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 169, in test_ambiguous_inputs
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_ambiguous_inputs (unit.test_nlp_comprehensive.TestNLPComprehensive.test_ambiguous_inputs) (text='get')
Test handling of ambiguous inputs
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 169, in test_ambiguous_inputs
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_case_insensitive_processing (unit.test_nlp_comprehensive.TestNLPComprehensive.test_case_insensitive_processing) (text='INSTALL FIREFOX')
Test that all processing is case insensitive
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 275, in test_case_insensitive_processing
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_case_insensitive_processing (unit.test_nlp_comprehensive.TestNLPComprehensive.test_case_insensitive_processing) (text='Install Firefox')
Test that all processing is case insensitive
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 275, in test_case_insensitive_processing
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_case_insensitive_processing (unit.test_nlp_comprehensive.TestNLPComprehensive.test_case_insensitive_processing) (text='iNsTaLl FiReFoX')
Test that all processing is case insensitive
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 275, in test_case_insensitive_processing
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_case_insensitive_processing (unit.test_nlp_comprehensive.TestNLPComprehensive.test_case_insensitive_processing) (text='InStAlL fIrEfOx')
Test that all processing is case insensitive
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 275, in test_case_insensitive_processing
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_complex_remove_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_complex_remove_patterns) (text='remove that firefox browser')
Test complex removal patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 90, in test_complex_remove_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_complex_remove_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_complex_remove_patterns) (text='get rid of the python stuff')
Test complex removal patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 90, in test_complex_remove_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_complex_remove_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_complex_remove_patterns) (text='uninstall vim editor completely')
Test complex removal patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 90, in test_complex_remove_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_complex_remove_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_complex_remove_patterns) (text='delete docker and all its dependencies')
Test complex removal patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 90, in test_complex_remove_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_complex_remove_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_complex_remove_patterns) (text='firefox needs to be gone')
Test complex removal patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 90, in test_complex_remove_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_confidence_levels (unit.test_nlp_comprehensive.TestNLPComprehensive.test_confidence_levels) (text='install firefox')
Test that confidence levels are appropriate
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 155, in test_confidence_levels
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_confidence_levels (unit.test_nlp_comprehensive.TestNLPComprehensive.test_confidence_levels) (text='remove vim')
Test that confidence levels are appropriate
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 155, in test_confidence_levels
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_confidence_levels (unit.test_nlp_comprehensive.TestNLPComprehensive.test_confidence_levels) (text='update system')
Test that confidence levels are appropriate
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 155, in test_confidence_levels
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_confidence_levels (unit.test_nlp_comprehensive.TestNLPComprehensive.test_confidence_levels) (text='help')
Test that confidence levels are appropriate
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 155, in test_confidence_levels
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_conversational_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_conversational_patterns) (text='can you please install firefox for me')
Test natural conversational patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 56, in test_conversational_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_conversational_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_conversational_patterns) (text='would you mind adding vim')
Test natural conversational patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 56, in test_conversational_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_conversational_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_conversational_patterns) (text='could i get python please')
Test natural conversational patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 56, in test_conversational_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_conversational_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_conversational_patterns) (text='is it possible to remove docker')
Test natural conversational patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 56, in test_conversational_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_conversational_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_conversational_patterns) (text="can you show me what's installed")
Test natural conversational patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 56, in test_conversational_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_conversational_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_conversational_patterns) (text='help me understand updates')
Test natural conversational patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 56, in test_conversational_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_error_recovery (unit.test_nlp_comprehensive.TestNLPComprehensive.test_error_recovery) (text="''")
Test error recovery from malformed inputs
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 243, in test_error_recovery
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_error_recovery (unit.test_nlp_comprehensive.TestNLPComprehensive.test_error_recovery) (text="'   '")
Test error recovery from malformed inputs
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 243, in test_error_recovery
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_error_recovery (unit.test_nlp_comprehensive.TestNLPComprehensive.test_error_recovery) (text="'install     '")
Test error recovery from malformed inputs
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 243, in test_error_recovery
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 150, in recognize
    return Intent(
        type=IntentType.UNKNOWN,
        confidence=0.0,
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'metadata'

======================================================================
ERROR: test_error_recovery (unit.test_nlp_comprehensive.TestNLPComprehensive.test_error_recovery) (text="'INSTALL FIREFOX!!!'")
Test error recovery from malformed inputs
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 243, in test_error_recovery
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_error_recovery (unit.test_nlp_comprehensive.TestNLPComprehensive.test_error_recovery) (text="'install\\tfirefox\\n'")
Test error recovery from malformed inputs
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 243, in test_error_recovery
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_help_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_help_patterns) (text='help me with nixos')
Test help request patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 140, in test_help_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_help_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_help_patterns) (text='how do i install software')
Test help request patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 140, in test_help_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_help_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_help_patterns) (text='what can this system do')
Test help request patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 140, in test_help_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_help_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_help_patterns) (text='i need assistance')
Test help request patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 140, in test_help_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_help_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_help_patterns) (text='explain how to use this')
Test help request patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 140, in test_help_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_help_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_help_patterns) (text='tutorial please')
Test help request patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 140, in test_help_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_metadata_preservation (unit.test_nlp_comprehensive.TestNLPComprehensive.test_metadata_preservation)
Test that metadata is properly preserved
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 210, in test_metadata_preservation
    intent = self.engine.recognize(test_input)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_noise_word_filtering (unit.test_nlp_comprehensive.TestNLPComprehensive.test_noise_word_filtering) (text='please install firefox for me now')
Test that noise words are properly filtered
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 185, in test_noise_word_filtering
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_noise_word_filtering (unit.test_nlp_comprehensive.TestNLPComprehensive.test_noise_word_filtering) (text='i really need vim editor that works')
Test that noise words are properly filtered
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 185, in test_noise_word_filtering
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_noise_word_filtering (unit.test_nlp_comprehensive.TestNLPComprehensive.test_noise_word_filtering) (text='can you please add the python package')
Test that noise words are properly filtered
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 185, in test_noise_word_filtering
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_noise_word_filtering (unit.test_nlp_comprehensive.TestNLPComprehensive.test_noise_word_filtering) (text='install the docker container system please')
Test that noise words are properly filtered
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 185, in test_noise_word_filtering
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_alias_resolution (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_alias_resolution) (text='install browser', expected='firefox')
Test comprehensive package alias resolution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 203, in test_package_alias_resolution
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_alias_resolution (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_alias_resolution) (text='add web browser', expected='firefox')
Test comprehensive package alias resolution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 203, in test_package_alias_resolution
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_alias_resolution (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_alias_resolution) (text='get text editor', expected='vim')
Test comprehensive package alias resolution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 203, in test_package_alias_resolution
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_alias_resolution (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_alias_resolution) (text='install editor', expected='vim')
Test comprehensive package alias resolution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 203, in test_package_alias_resolution
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_alias_resolution (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_alias_resolution) (text='add code editor', expected='vscode')
Test comprehensive package alias resolution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 203, in test_package_alias_resolution
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_alias_resolution (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_alias_resolution) (text='get programming language python', expected='python3')
Test comprehensive package alias resolution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 203, in test_package_alias_resolution
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_alias_resolution (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_alias_resolution) (text='install node runtime', expected='nodejs')
Test comprehensive package alias resolution
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 203, in test_package_alias_resolution
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_name_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_name_variations) (text='install the firefox web browser')
Test various ways to express package names
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 73, in test_package_name_variations
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_name_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_name_variations) (text='add python programming language')
Test various ways to express package names
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 73, in test_package_name_variations
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_name_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_name_variations) (text='get vim text editor')
Test various ways to express package names
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 73, in test_package_name_variations
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_name_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_name_variations) (text='download docker container system')
Test various ways to express package names
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 73, in test_package_name_variations
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_package_name_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_package_name_variations) (text='install nodejs javascript runtime')
Test various ways to express package names
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 73, in test_package_name_variations
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_pattern_precedence (unit.test_nlp_comprehensive.TestNLPComprehensive.test_pattern_precedence)
Test that pattern precedence works correctly
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 219, in test_pattern_precedence
    intent = self.engine.recognize("get rid of firefox")
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_search_information_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_search_information_patterns) (text='search for text editors')
Test search and information gathering patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 122, in test_search_information_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_search_information_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_search_information_patterns) (text='find programming languages')
Test search and information gathering patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 122, in test_search_information_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_search_information_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_search_information_patterns) (text='what is available for browsing')
Test search and information gathering patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 122, in test_search_information_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_search_information_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_search_information_patterns) (text='show me all editors')
Test search and information gathering patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 122, in test_search_information_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_search_information_patterns (unit.test_nlp_comprehensive.TestNLPComprehensive.test_search_information_patterns) (text='is there a good terminal emulator')
Test search and information gathering patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 122, in test_search_information_patterns
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_typo_tolerance_firefox (unit.test_nlp_comprehensive.TestNLPComprehensive.test_typo_tolerance_firefox) (typo='install fierfix')
Test tolerance for common Firefox typos
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 37, in test_typo_tolerance_firefox
    intent = self.engine.recognize(typo)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_typo_tolerance_firefox (unit.test_nlp_comprehensive.TestNLPComprehensive.test_typo_tolerance_firefox) (typo='get firfox')
Test tolerance for common Firefox typos
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 37, in test_typo_tolerance_firefox
    intent = self.engine.recognize(typo)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_typo_tolerance_firefox (unit.test_nlp_comprehensive.TestNLPComprehensive.test_typo_tolerance_firefox) (typo='add fierfox')
Test tolerance for common Firefox typos
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 37, in test_typo_tolerance_firefox
    intent = self.engine.recognize(typo)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_typo_tolerance_firefox (unit.test_nlp_comprehensive.TestNLPComprehensive.test_typo_tolerance_firefox) (typo='download firefix')
Test tolerance for common Firefox typos
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 37, in test_typo_tolerance_firefox
    intent = self.engine.recognize(typo)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_typo_tolerance_firefox (unit.test_nlp_comprehensive.TestNLPComprehensive.test_typo_tolerance_firefox) (typo='i need fireofx')
Test tolerance for common Firefox typos
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 37, in test_typo_tolerance_firefox
    intent = self.engine.recognize(typo)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_update_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_update_variations) (text='update everything on my system')
Test different ways to ask for updates
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 107, in test_update_variations
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_update_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_update_variations) (text='upgrade all packages')
Test different ways to ask for updates
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 107, in test_update_variations
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_update_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_update_variations) (text='make my system current')
Test different ways to ask for updates
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 107, in test_update_variations
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_update_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_update_variations) (text='system upgrade please')
Test different ways to ask for updates
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 107, in test_update_variations
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_update_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_update_variations) (text='update the whole system')
Test different ways to ask for updates
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 107, in test_update_variations
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_update_variations (unit.test_nlp_comprehensive.TestNLPComprehensive.test_update_variations) (text='upgrade my nixos')
Test different ways to ask for updates
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 107, in test_update_variations
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_whitespace_tolerance (unit.test_nlp_comprehensive.TestNLPComprehensive.test_whitespace_tolerance) (text="'install  firefox'")
Test tolerance for various whitespace patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 290, in test_whitespace_tolerance
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_whitespace_tolerance (unit.test_nlp_comprehensive.TestNLPComprehensive.test_whitespace_tolerance) (text="' install firefox '")
Test tolerance for various whitespace patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 290, in test_whitespace_tolerance
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_whitespace_tolerance (unit.test_nlp_comprehensive.TestNLPComprehensive.test_whitespace_tolerance) (text="'install\\tfirefox'")
Test tolerance for various whitespace patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 290, in test_whitespace_tolerance
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_whitespace_tolerance (unit.test_nlp_comprehensive.TestNLPComprehensive.test_whitespace_tolerance) (text="'install   firefox   please'")
Test tolerance for various whitespace patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 290, in test_whitespace_tolerance
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_extremely_long_input (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_extremely_long_input)
Test handling of very long inputs
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 305, in test_extremely_long_input
    intent = self.engine.recognize(long_input)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_nested_package_references (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_nested_package_references) (text='install firefox or chrome browser')
Test complex nested package references
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 350, in test_nested_package_references
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_nested_package_references (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_nested_package_references) (text='add vim or emacs editor')
Test complex nested package references
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 350, in test_nested_package_references
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_nested_package_references (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_nested_package_references) (text='get python or node runtime')
Test complex nested package references
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 350, in test_nested_package_references
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_special_characters (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_special_characters) (text='install firefox!!!')
Test handling of special characters
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 323, in test_special_characters
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_special_characters (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_special_characters) (text='install firefox???')
Test handling of special characters
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 323, in test_special_characters
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_special_characters (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_special_characters) (text='install firefox...')
Test handling of special characters
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 323, in test_special_characters
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_special_characters (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_special_characters) (text='install firefox;')
Test handling of special characters
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 323, in test_special_characters
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_special_characters (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_special_characters) (text='install firefox,')
Test handling of special characters
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 323, in test_special_characters
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_unicode_handling (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_unicode_handling) (text='install firefox ♥')
Test handling of unicode characters
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 336, in test_unicode_handling
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_unicode_handling (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_unicode_handling) (text='install firefox 🔥')
Test handling of unicode characters
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 336, in test_unicode_handling
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: test_unicode_handling (unit.test_nlp_comprehensive.TestNLPEdgeCases.test_unicode_handling) (text='install firefox café')
Test handling of unicode characters
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_nlp_comprehensive.py", line 336, in test_unicode_handling
    intent = self.engine.recognize(text)
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/core/intent_engine.py", line 142, in recognize
    return Intent(
        type=intent_type,
    ...<2 lines>...
        metadata={'original_input': text}
    )
TypeError: Intent.__init__() got an unexpected keyword argument 'target'

======================================================================
ERROR: unit.test_tui_app (unittest.loader._FailedTest.unit.test_tui_app)
----------------------------------------------------------------------
ImportError: Failed to import test module: unit.test_tui_app
Traceback (most recent call last):
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/loader.py", line 396, in _find_test_path
    module = self._get_module_from_name(name)
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/loader.py", line 339, in _get_module_from_name
    __import__(name)
    ~~~~~~~~~~^^^^^^
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_tui_app.py", line 189, in <module>
    from nix_for_humanity.tui.app import (
    ...<2 lines>...
    )
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/tui/__init__.py", line 6, in <module>
    from .app import NixHumanityApp, run
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/tui/app.py", line 137, in <module>
    class NixHumanityApp(App):
    ...<413 lines>...
            self.exit()
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/src/nix_for_humanity/tui/app.py", line 264, in NixHumanityApp
    def on_input_submitted(self, event: Input.Submitted) -> None:
                                        ^^^^^^^^^^^^^^^
AttributeError: type object 'MockInput' has no attribute 'Submitted'


======================================================================
FAIL: test_concurrent_safety (unit.test_execution_engine_enhanced.TestExecutionEngineEnhanced.test_concurrent_safety)
Test that engine can handle concurrent executions safely
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_execution_engine_enhanced.py", line 507, in test_concurrent_safety
    self.assertEqual(len(results), 5)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
AssertionError: 0 != 5

======================================================================
FAIL: test_intent_extraction (unit.test_headless_engine.TestHeadlessEngine.test_intent_extraction)
Test intent extraction logic
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_headless_engine.py", line 134, in test_intent_extraction
    self.assertEqual(intent.confidence, expected_confidence)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 0.7 != 0.3

======================================================================
FAIL: test_interaction_tracking (unit.test_headless_engine.TestHeadlessEngine.test_interaction_tracking)
Test that interactions are properly tracked
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_headless_engine.py", line 247, in test_interaction_tracking
    self.mock_feedback.collect_implicit_feedback.assert_called_once()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/nix/store/djck7mx6jad1w0yy6zings96dyxanls6-python3-3.13.5/lib/python3.13/unittest/mock.py", line 958, in assert_called_once
    raise AssertionError(msg)
AssertionError: Expected 'collect_implicit_feedback' to have been called once. Called 0 times.

======================================================================
FAIL: test_personality_application (unit.test_headless_engine.TestHeadlessEngine.test_personality_application)
Test personality application to responses
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_headless_engine.py", line 152, in test_personality_application
    self.assertIn("I'm still learning", result)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: "I'm still learning" not found in <MagicMock name='mock.apply_personality()' id='140685976627792'>

======================================================================
FAIL: test_process_basic_query (unit.test_headless_engine.TestHeadlessEngine.test_process_basic_query)
Test processing a basic install query
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_headless_engine.py", line 84, in test_process_basic_query
    self.assertEqual(response.confidence, 0.9)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: <MagicMock name='mock.handle_intent().get()' id='140685978331392'> != 0.9

======================================================================
FAIL: test_process_with_plugin_handling (unit.test_headless_engine.TestHeadlessEngine.test_process_with_plugin_handling)
Test that plugins can handle intents
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_headless_engine.py", line 114, in test_process_with_plugin_handling
    self.assertEqual(response.text, 'Plugin handled this!')
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: <MagicMock name='mock.apply_personality()' id='140685978323664'> != 'Plugin handled this!'

======================================================================
FAIL: test_full_query_pipeline (unit.test_headless_engine.TestIntegration.test_full_query_pipeline)
Test a complete query through the engine
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_headless_engine.py", line 490, in test_full_query_pipeline
    self.assertIn("I'm still learning", response.text)  # Symbiotic personality
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: "I'm still learning" not found in 'Hi there!\n\nLet me help you install Neovim!\n\n\nLet me know if you need any clarification! 😊'

======================================================================
FAIL: test_explain_intent_recognition (unit.test_intent.TestIntentRecognizer.test_explain_intent_recognition) (text='how does nix work')
Test recognition of explain intents
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent.py", line 222, in test_explain_intent_recognition
    self.assertIn(expected_topic.split()[0], intent.entities['topic'])
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 'nix' not found in 'work'

======================================================================
FAIL: test_explain_intent_recognition (unit.test_intent.TestIntentRecognizer.test_explain_intent_recognition) (text='how to use home-manager work')
Test recognition of explain intents
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent.py", line 222, in test_explain_intent_recognition
    self.assertIn(expected_topic.split()[0], intent.entities['topic'])
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 'use' not found in 'work'

======================================================================
FAIL: test_multi_word_packages (unit.test_intent.TestIntentRecognizer.test_multi_word_packages)
Test handling of multi-word package names
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent.py", line 343, in test_multi_word_packages
    self.assertEqual(intent.entities['package'], 'google-chrome')
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 'google' != 'google-chrome'
- google
+ google-chrome


======================================================================
FAIL: test_pattern_priority (unit.test_intent.TestIntentRecognizer.test_pattern_priority)
Test that patterns are matched in the correct priority order
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent.py", line 330, in test_pattern_priority
    self.assertEqual(intent.type, IntentType.UPDATE_SYSTEM)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: <IntentType.UNKNOWN: 'unknown'> != <IntentType.UPDATE_SYSTEM: 'update_system'>

======================================================================
FAIL: test_raw_text_preservation (unit.test_intent.TestIntentRecognizer.test_raw_text_preservation)
Test that raw text is preserved in intent
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent.py", line 305, in test_raw_text_preservation
    self.assertEqual(intent.raw_text, original_text)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 'install firefox' != '  INSTALL FIREFOX!!!  '
- install firefox
+   INSTALL FIREFOX!!!  


======================================================================
FAIL: test_search_intent_recognition (unit.test_intent.TestIntentRecognizer.test_search_intent_recognition) (text='what packages are available')
Test recognition of search intents
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent.py", line 163, in test_search_intent_recognition
    self.assertEqual(intent.type, IntentType.SEARCH_PACKAGE)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: <IntentType.EXPLAIN: 'explain'> != <IntentType.SEARCH_PACKAGE: 'search_package'>

======================================================================
FAIL: test_unknown_intent (unit.test_intent.TestIntentRecognizer.test_unknown_intent) (text='what time is it')
Test recognition of unknown intents
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent.py", line 239, in test_unknown_intent
    self.assertEqual(intent.type, IntentType.UNKNOWN)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: <IntentType.EXPLAIN: 'explain'> != <IntentType.UNKNOWN: 'unknown'>

======================================================================
FAIL: test_all_intent_types_covered (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_all_intent_types_covered)
Test that all IntentType enum values have patterns
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 336, in test_all_intent_types_covered
    self.assertIn(intent_type, self.engine.patterns,
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                f"Missing patterns for {intent_type}")
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: <IntentType.CONFIG: 'config'> not found in {<IntentType.REMOVE: 'remove'>: [('^(remove|uninstall|delete)\\s+(.+)$', 2), ('^get\\s+rid\\s+of\\s+(.+)$', 1), ('^(.+)\\s+(is\\s+gone|needs\\s+to\\s+be\\s+gone)$', 1)], <IntentType.INFO: 'info'>: [('^(what|show)\\s+(is|me)\\s+installed$', 0), ('^what\\s+is\\s+installed$', 0), ('^show\\s+me\\s+installed$', 0), ('^show\\s+installed$', 0), ('^list\\s+packages$', 0), ('^system\\s+info$', 0)], <IntentType.UPDATE: 'update'>: [('^(update|upgrade)\\s+(system|everything|all|all\\s+packages)$', 0), ('^(update|upgrade)\\s+my\\s+system$', 0), ('^(update|upgrade)\\s+the\\s+(whole\\s+)?system$', 0), ('^(update|upgrade)\\s+my\\s+nixos$', 0), ('^(update|upgrade)\\s+everything\\s+on\\s+my\\s+system$', 0), ('^(system\\s+)?(update|upgrade)(\\s+please)?$', 0), ('^system\\s+(update|upgrade)(\\s+please)?$', 0), ('^make\\s+everything\\s+current$', 0), ('^make\\s+my\\s+system\\s+current$', 0), ('^(update|upgrade)\\s*$', 0)], <IntentType.INSTALL: 'install'>: [('^(install|add|download)\\s+(.+)$', 2), ('^get\\s+me\\s+(.+)$', 1), ('^get\\s+(?!rid\\s+of)(.+)$', 1), ('^(update|upgrade)\\s+([a-zA-Z][a-zA-Z0-9_-]*(?:\\s+[a-zA-Z][a-zA-Z0-9_-]*)?)(?:\\s+(?:package|software))?$', 2), ('^(please\\s+)?(install|add|get)\\s+(.+?)(\\s+please)?$', 3), ('^(can\\s+you\\s+)?(please\\s+)?(install|add|get)\\s+(.+?)(\\s+(for\\s+me|please))?$', 4), ('^(would\\s+you\\s+mind\\s+)?(adding|installing)\\s+(.+)$', 3), ('^(could\\s+i\\s+get|can\\s+i\\s+have)\\s+(.+?)(\\s+please)?$', 2), ('^i\\s+(need|want|require)\\s+(.+)$', 2), ('^i\\s+really\\s+(need|want)\\s+(.+?)(\\s+that\\s+works)?$', 2), ('^(need|want)\\s+(.+)$', 2), ('^(?!.*(system|upgrade|update))(.+)\\s+please$', 2)], <IntentType.SEARCH: 'search'>: [('^(search|find|look\\s+for)\\s+(.+)$', 2), ('^what\\s+is\\s+(?!installed)(.+)$', 1), ('^is\\s+there\\s+(.+)$', 1), ('^show\\s+me\\s+(?!installed)(.+)$', 1)], <IntentType.ROLLBACK: 'rollback'>: [('^(rollback|revert|undo)(\\s+.*)?$', 0), ('^go\\s+back(\\s+.*)?$', 0), ('^previous\\s+generation$', 0)], <IntentType.HELP: 'help'>: [('^help(\\s+.*)?$', 0), ('^what\\s+can\\s+(you\\s+do|this\\s+system\\s+do)$', 0), ('^how\\s+do\\s+i(\\s+.*)?$', 0), ('^i\\s+need\\s+(assistance|help)$', 0), ('^(explain|tutorial)\\s+(.+)$', 0)]} : Missing patterns for IntentType.CONFIG

======================================================================
FAIL: test_concurrent_recognition (unit.test_intent_engine_enhanced.TestIntentEngineEnhanced.test_concurrent_recognition)
Test thread safety of intent recognition
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_intent_engine_enhanced.py", line 412, in test_concurrent_recognition
    self.assertEqual(len(results), len(test_inputs))
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 0 != 5

======================================================================
FAIL: test_get_all_intent_types (unit.test_knowledge_base_enhanced.TestKnowledgeBaseEnhanced.test_get_all_intent_types)
Test getting solutions for all intent types
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_knowledge_base_enhanced.py", line 232, in test_get_all_intent_types
    self.assertIsInstance(solution, str)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
AssertionError: {'found': True, 'solution': 'Use declarative or imperative installation', 'example': 'nix profile install nixpkgs#firefox', 'explanation': 'Modern Nix uses profile commands for user packages', 'related': ['search', 'remove']} is not an instance of <class 'str'>

======================================================================
FAIL: test_get_install_methods (unit.test_knowledge_base_enhanced.TestKnowledgeBaseEnhanced.test_get_install_methods)
Test getting installation methods
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_knowledge_base_enhanced.py", line 86, in test_get_install_methods
    self.assertIn('method', method)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^
AssertionError: 'method' not found in {'name': 'Declarative (Recommended)', 'description': 'Add to your system configuration for permanent installation', 'command': 'Edit /etc/nixos/configuration.nix', 'example': 'environment.systemPackages = with pkgs; [ firefox ];'}

======================================================================
FAIL: test_get_problem_solution (unit.test_knowledge_base_enhanced.TestKnowledgeBaseEnhanced.test_get_problem_solution)
Test getting solutions for common problems
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_knowledge_base_enhanced.py", line 103, in test_get_problem_solution
    self.assertIn("nix-collect-garbage", solution)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: 'nix-collect-garbage' not found in {'symptom': 'disk space', 'cause': 'out of space', 'solution': 'Run `nix-collect-garbage -d` to free disk space by removing old generations', 'prevention': 'Regularly clean old generations'}

======================================================================
FAIL: test_solution_formatting (unit.test_knowledge_base_enhanced.TestKnowledgeBaseEnhanced.test_solution_formatting)
Test that solutions are properly formatted
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_knowledge_base_enhanced.py", line 358, in test_solution_formatting
    self.assertGreater(len(solution), 50)  # Should be substantial
    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^
AssertionError: 5 not greater than 50

======================================================================
FAIL: test_get_error_solution_partial_match (unit.test_learning_system_enhanced.TestLearningSystemEnhanced.test_get_error_solution_partial_match)
Test partial matching for error solutions
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_learning_system_enhanced.py", line 209, in test_get_error_solution_partial_match
    self.assertEqual(solution, "Try 'nix search firefox'")
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AssertionError: None != "Try 'nix search firefox'"

======================================================================
FAIL: test_adaptive_edge_detection (unit.test_personality_system_enhanced.TestPersonalitySystemEnhanced.test_adaptive_edge_detection)
Test edge cases in adaptive detection
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_personality_system_enhanced.py", line 298, in test_adaptive_edge_detection
    self.assertIn("Hi there!", result)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
AssertionError: 'Hi there!' not found in "Great question! Response\n\nYou're doing awesome learning NixOS! Keep it up! 🌟"

======================================================================
FAIL: test_edge_cases (unit.test_personality_system_enhanced.TestPersonalitySystemEnhanced.test_edge_cases)
Test edge cases and boundary conditions
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/srv/luminous-dynamics/11-meta-consciousness/nix-for-humanity/tests/unit/test_personality_system_enhanced.py", line 230, in test_edge_cases
    self.assertIn("Hi there!", result)
    ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^
AssertionError: 'Hi there!' not found in 'Response'

----------------------------------------------------------------------
Ran 450 tests in 24.339s

FAILED (failures=23, errors=308, skipped=1)

==================================================

==================================================
Error collecting feedback: DB Error
Headless engine shutdown complete
