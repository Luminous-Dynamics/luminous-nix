# Pre-commit hooks for Nix for Humanity
# Install: pip install pre-commit
# Setup: pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # General hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: detect-private-key
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: no-commit-to-branch
        args: ['--branch', 'main']

  # Python hooks
  - repo: https://github.com/psf/black
    rev: 24.1.1
    hooks:
      - id: black
        language_version: python3
        args: ['--line-length=88']

  - repo: https://github.com/PyCQA/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: ['--max-line-length=88', '--extend-ignore=E203,W503']

  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ['--profile', 'black', '--line-length', '88']

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: ['-ll', '--skip', 'B101,B601']
        files: \.py$

  # Markdown
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.39.0
    hooks:
      - id: markdownlint
        args: ['--fix']

  # Shell scripts
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck
        args: ['--severity=warning']

  # Commit message
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Security
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package-lock.json

  # Custom local hooks
  - repo: local
    hooks:
      - id: check-documentation-standards
        name: Check documentation standards
        entry: bash docs/check-doc-standards.sh
        language: system
        files: \.md$
        pass_filenames: false

      - id: no-console-log
        name: No console.log statements
        entry: bash -c 'grep -r "console\.log" --include="*.js" --include="*.ts" src/ && exit 1 || exit 0'
        language: system
        files: \.(js|ts)$
        pass_filenames: false

      - id: check-todos
        name: Check TODO comments
        entry: bash -c 'grep -r "TODO\|FIXME\|XXX" --include="*.py" --include="*.js" --include="*.ts" src/ && echo "Warning TODO comments found" || exit 0'
        language: system
        pass_filenames: false

      - id: validate-personas
        name: Validate persona references
        entry: bash -c 'echo "Checking persona references..."'
        language: system
        files: \.(md|py|js|ts)$
        pass_filenames: false

# Configuration for specific tools
default_language_version:
  python: python3

exclude: |
  (?x)^(
    archive/.*|
    node_modules/.*|
    venv/.*|
    \.git/.*|
    dist/.*|
    build/.*|
    .*\.min\.js|
    .*\.min\.css|
    package-lock\.json|
    poetry\.lock
  )$
