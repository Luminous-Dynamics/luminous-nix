openapi: 3.0.3
info:
  title: Nix for Humanity API
  description: |
    REST API for natural language NixOS operations.

    The Nix for Humanity API provides programmatic access to:
    - Natural language query processing
    - Package search and management
    - Session management
    - Feedback collection
    - System statistics
  version: 0.8.0
  contact:
    name: Luminous Dynamics
    url: https://github.com/Luminous-Dynamics/nix-for-humanity
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:5000/api/v1
    description: Local development server
  - url: https://api.nixforhumanity.org/v1
    description: Production server (future)

tags:
  - name: Core
    description: Core functionality endpoints
  - name: Search
    description: Package search operations
  - name: Session
    description: Session management
  - name: Feedback
    description: User feedback collection
  - name: System
    description: System information and statistics

paths:
  /health:
    get:
      tags:
        - System
      summary: Health check
      description: Check if the API is running and healthy
      operationId: getHealth
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /query:
    post:
      tags:
        - Core
      summary: Process natural language query
      description: Submit a natural language query about NixOS operations
      operationId: processQuery
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRequest'
      responses:
        '200':
          description: Query processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /search:
    get:
      tags:
        - Search
      summary: Search packages
      description: Search for available NixOS packages
      operationId: searchPackages
      parameters:
        - name: q
          in: query
          description: Search query
          required: true
          schema:
            type: string
            example: firefox
        - name: limit
          in: query
          description: Maximum number of results
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'

  /feedback:
    post:
      tags:
        - Feedback
      summary: Submit feedback
      description: Submit feedback about a query response
      operationId: submitFeedback
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackRequest'
      responses:
        '200':
          description: Feedback submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'

  /session/{sessionId}:
    get:
      tags:
        - Session
      summary: Get session information
      description: Retrieve information about a specific session
      operationId: getSession
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Session information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        '404':
          $ref: '#/components/responses/NotFound'

  /stats:
    get:
      tags:
        - System
      summary: Get statistics
      description: Get system statistics and usage information
      operationId: getStats
      responses:
        '200':
          description: System statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsResponse'

  /capabilities:
    get:
      tags:
        - System
      summary: Get capabilities
      description: Get API capabilities and supported features
      operationId: getCapabilities
      responses:
        '200':
          description: API capabilities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilitiesResponse'

components:
  schemas:
    ErrorResponse:
      type: object
      required:
        - error
        - status
        - timestamp
      properties:
        error:
          type: string
          description: Error message
        status:
          type: string
          enum: [error]
        timestamp:
          type: string
          format: date-time

    HealthResponse:
      type: object
      required:
        - status
        - version
        - uptime
        - timestamp
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
        version:
          type: string
        uptime:
          type: integer
          description: Uptime in seconds
        timestamp:
          type: string
          format: date-time

    QueryRequest:
      type: object
      required:
        - query
      properties:
        query:
          type: string
          description: Natural language query
          example: "How do I install Firefox?"
        session_id:
          type: string
          format: uuid
          description: Optional session identifier
        context:
          type: object
          properties:
            personality:
              type: string
              enum: [minimal, friendly, encouraging, technical, symbiotic]
              default: friendly
            execution_mode:
              type: string
              enum: [dry_run, safe, full, learning]
              default: dry_run
            collect_feedback:
              type: boolean
              default: true
            capabilities:
              type: array
              items:
                type: string
              default: [text]

    QueryResponse:
      type: object
      required:
        - status
        - session_id
        - response
        - timestamp
      properties:
        status:
          type: string
          enum: [success]
        session_id:
          type: string
          format: uuid
        response:
          type: object
          properties:
            text:
              type: string
              description: Natural language response
            commands:
              type: array
              items:
                type: object
                properties:
                  command:
                    type: string
                  description:
                    type: string
                  safe:
                    type: boolean
            intent:
              type: object
              properties:
                action:
                  type: string
                package:
                  type: string
                confidence:
                  type: number
                  minimum: 0
                  maximum: 1
            suggestions:
              type: array
              items:
                type: string
            educational:
              type: object
              properties:
                tip:
                  type: string
        timestamp:
          type: string
          format: date-time

    SearchResponse:
      type: object
      required:
        - status
        - query
        - count
        - packages
        - timestamp
      properties:
        status:
          type: string
          enum: [success]
        query:
          type: string
        count:
          type: integer
        packages:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              version:
                type: string
              description:
                type: string
        timestamp:
          type: string
          format: date-time

    FeedbackRequest:
      type: object
      required:
        - session_id
        - query
        - response
        - helpful
      properties:
        session_id:
          type: string
          format: uuid
        query:
          type: string
        response:
          type: string
        helpful:
          type: boolean
        improved_response:
          type: string
        rating:
          type: integer
          minimum: 1
          maximum: 5

    FeedbackResponse:
      type: object
      required:
        - status
        - message
        - timestamp
      properties:
        status:
          type: string
          enum: [success]
        message:
          type: string
        timestamp:
          type: string
          format: date-time

    SessionResponse:
      type: object
      required:
        - status
        - session
        - timestamp
      properties:
        status:
          type: string
          enum: [success]
        session:
          type: object
          properties:
            id:
              type: string
              format: uuid
            created:
              type: string
              format: date-time
            interactions:
              type: integer
            last_interaction:
              type: string
              format: date-time
        timestamp:
          type: string
          format: date-time

    StatsResponse:
      type: object
      required:
        - status
        - stats
        - timestamp
      properties:
        status:
          type: string
          enum: [success]
        stats:
          type: object
          properties:
            uptime:
              type: integer
            total_queries:
              type: integer
            active_sessions:
              type: integer
            avg_response_time:
              type: number
            api:
              type: object
              properties:
                active_sessions:
                  type: integer
                total_sessions:
                  type: integer
        timestamp:
          type: string
          format: date-time

    CapabilitiesResponse:
      type: object
      required:
        - status
        - capabilities
        - timestamp
      properties:
        status:
          type: string
          enum: [success]
        capabilities:
          type: object
          properties:
            version:
              type: string
            features:
              type: array
              items:
                type: string
            personalities:
              type: array
              items:
                type: string
            execution_modes:
              type: array
              items:
                type: string
            rate_limits:
              type: object
              additionalProperties:
                type: string
        timestamp:
          type: string
          format: date-time

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "Missing 'query' field"
            status: error
            timestamp: "2024-01-15T10:30:00Z"

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "Session not found"
            status: error
            timestamp: "2024-01-15T10:30:00Z"

    RateLimitExceeded:
      description: Rate limit exceeded
      headers:
        X-RateLimit-Limit:
          schema:
            type: integer
          description: Request limit per time window
        X-RateLimit-Remaining:
          schema:
            type: integer
          description: Remaining requests in window
        X-RateLimit-Reset:
          schema:
            type: integer
          description: Time when limit resets (Unix timestamp)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "Rate limit exceeded"
            status: error
            timestamp: "2024-01-15T10:30:00Z"

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "Internal server error"
            status: error
            timestamp: "2024-01-15T10:30:00Z"

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication (future)

    BearerAuth:
      type: http
      scheme: bearer
      description: JWT token authentication (future)
