name: Simplicity Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  litmus-test:
    name: Verify Litmus Test Completion
    runs-on: ubuntu-latest
    steps:
      - name: Check PR Description
        uses: actions/github-script@v6
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || '';
            
            // Check for required checkboxes
            const requiredChecks = [
              'Explainability Test',
              'Composition Test',
              'Grandma Rose Test',
              'Deletion Test',
              'Magic vs Tutorial Test',
              'Teachability Test'
            ];
            
            const missingChecks = [];
            for (const check of requiredChecks) {
              const regex = new RegExp(`\\[x\\].*${check}`, 'i');
              if (!regex.test(body)) {
                missingChecks.push(check);
              }
            }
            
            if (missingChecks.length > 0) {
              core.setFailed(`Litmus Test incomplete! Missing: ${missingChecks.join(', ')}`);
              
              // Post comment
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: pr.number,
                body: `## ❌ Litmus Test Incomplete\n\nPlease complete all 6 tests before merge:\n${missingChecks.map(t => `- [ ] ${t}`).join('\n')}\n\nRemember: "The strategic thinking proves you COULD build complexity. The simple code proves you CHOSE not to."`
              });
            }

  complexity-budget:
    name: Check Complexity Budget
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Calculate Complexity Impact
        id: complexity
        run: |
          # Get diff stats
          git fetch origin main
          ADDED=$(git diff --numstat origin/main..HEAD | awk '{sum+=$1} END {print sum}')
          REMOVED=$(git diff --numstat origin/main..HEAD | awk '{sum+=$2} END {print sum}')
          NET=$((ADDED - REMOVED))
          
          echo "lines_added=$ADDED" >> $GITHUB_OUTPUT
          echo "lines_removed=$REMOVED" >> $GITHUB_OUTPUT
          echo "net_change=$NET" >> $GITHUB_OUTPUT
          
          # Check dependencies
          if [ -f "pyproject.toml" ]; then
            DEPS_BEFORE=$(git show origin/main:pyproject.toml | grep -c "^[a-zA-Z0-9-_]* =" || echo 0)
            DEPS_AFTER=$(grep -c "^[a-zA-Z0-9-_]* =" pyproject.toml || echo 0)
            DEPS_CHANGE=$((DEPS_AFTER - DEPS_BEFORE))
            echo "deps_change=$DEPS_CHANGE" >> $GITHUB_OUTPUT
          else
            echo "deps_change=0" >> $GITHUB_OUTPUT
          fi
      
      - name: Post Complexity Report
        uses: actions/github-script@v6
        with:
          script: |
            const added = ${{ steps.complexity.outputs.lines_added }};
            const removed = ${{ steps.complexity.outputs.lines_removed }};
            const net = ${{ steps.complexity.outputs.net_change }};
            const deps = ${{ steps.complexity.outputs.deps_change }};
            
            let emoji = '✅';
            let status = 'Within budget';
            
            if (net > 100) {
              emoji = '⚠️';
              status = 'Approaching limit';
            }
            if (net > 500) {
              emoji = '🚨';
              status = 'OVER BUDGET';
            }
            
            const message = `## ${emoji} Complexity Budget Check
            
            | Metric | Value |
            |--------|-------|
            | Lines Added | +${added} |
            | Lines Removed | -${removed} |
            | **Net Change** | **${net > 0 ? '+' : ''}${net}** |
            | Dependencies | ${deps > 0 ? '+' : ''}${deps} |
            | **Status** | **${status}** |
            
            ${net > 500 ? '**Action Required**: This PR adds significant complexity. Please identify code to remove to offset this addition.' : ''}
            ${net < -100 ? '🎉 **Celebration Time!** This PR reduces complexity! Schedule a deletion ceremony!' : ''}
            `;
            
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.payload.pull_request.number,
              body: message
            });
            
            if (net > 500 && deps > 2) {
              core.setFailed('Complexity budget exceeded! Simplify or remove equivalent complexity first.');
            }

  simplicity-score:
    name: Calculate Simplicity Score Impact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Estimate Score Impact
        uses: actions/github-script@v6
        with:
          script: |
            // This is a simplified estimation
            // Real implementation would run the actual SimplicityScoreCalculator
            
            const pr = context.payload.pull_request;
            const additions = pr.additions || 0;
            const deletions = pr.deletions || 0;
            const netComplexity = additions - deletions;
            
            // Rough estimation
            const currentScore = 100; // Would fetch from main branch
            const complexityImpact = (netComplexity / 1000) * 10;
            const estimatedScore = Math.max(0, currentScore - complexityImpact);
            
            const emoji = estimatedScore > currentScore ? '📈' : estimatedScore < currentScore ? '📉' : '➡️';
            
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: pr.number,
              body: `## ${emoji} Simplicity Score Impact
              
              Estimated Score: ${currentScore} → ${estimatedScore.toFixed(1)}
              
              Remember: We optimize for high user value with low complexity.`
            });

  celebration-check:
    name: Check for Deletion Celebrations
    runs-on: ubuntu-latest
    if: github.event.pull_request.deletions > github.event.pull_request.additions
    steps:
      - name: Celebrate Deletions
        uses: actions/github-script@v6
        with:
          script: |
            const pr = context.payload.pull_request;
            const netReduction = pr.deletions - pr.additions;
            
            if (netReduction > 100) {
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: pr.number,
                body: `# 🎊 DELETION CELEBRATION! 🎊
                
                You've removed ${netReduction} lines of code!
                
                This is a triumph of simplicity over complexity.
                Don't forget to:
                1. Add this achievement to WALL_OF_DELETION.md
                2. Schedule a team deletion ceremony
                3. Update your complexity budget credits
                
                **"The best code is no code."**`
              });
              
              // Add celebration label
              await github.rest.issues.addLabels({
                ...context.repo,
                issue_number: pr.number,
                labels: ['deletion-celebration']
              });
            }